
window.projectVersion = 'master';

(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href=".html">Facebook</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Facebook_WebDriver" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Facebook/WebDriver.html">WebDriver</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Facebook_WebDriver_Chrome" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Facebook/WebDriver/Chrome.html">Chrome</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Facebook_WebDriver_Chrome_ChromeDriver" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Chrome/ChromeDriver.html">ChromeDriver</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Chrome_ChromeDriverService" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Chrome/ChromeDriverService.html">ChromeDriverService</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Chrome_ChromeOptions" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Chrome/ChromeOptions.html">ChromeOptions</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Facebook_WebDriver_Exception" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Facebook/WebDriver/Exception.html">Exception</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Facebook_WebDriver_Exception_ElementNotSelectableException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/ElementNotSelectableException.html">ElementNotSelectableException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_ElementNotVisibleException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/ElementNotVisibleException.html">ElementNotVisibleException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_ExpectedException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/ExpectedException.html">ExpectedException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_IMEEngineActivationFailedException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/IMEEngineActivationFailedException.html">IMEEngineActivationFailedException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_IMENotAvailableException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/IMENotAvailableException.html">IMENotAvailableException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_IndexOutOfBoundsException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/IndexOutOfBoundsException.html">IndexOutOfBoundsException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_InvalidCookieDomainException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/InvalidCookieDomainException.html">InvalidCookieDomainException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_InvalidCoordinatesException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/InvalidCoordinatesException.html">InvalidCoordinatesException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_InvalidElementStateException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/InvalidElementStateException.html">InvalidElementStateException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_InvalidSelectorException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/InvalidSelectorException.html">InvalidSelectorException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_MoveTargetOutOfBoundsException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/MoveTargetOutOfBoundsException.html">MoveTargetOutOfBoundsException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_NoAlertOpenException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/NoAlertOpenException.html">NoAlertOpenException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_NoCollectionException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/NoCollectionException.html">NoCollectionException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_NoScriptResultException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/NoScriptResultException.html">NoScriptResultException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_NoStringException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/NoStringException.html">NoStringException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_NoStringLengthException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/NoStringLengthException.html">NoStringLengthException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_NoStringWrapperException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/NoStringWrapperException.html">NoStringWrapperException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_NoSuchCollectionException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/NoSuchCollectionException.html">NoSuchCollectionException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_NoSuchDocumentException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/NoSuchDocumentException.html">NoSuchDocumentException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_NoSuchDriverException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/NoSuchDriverException.html">NoSuchDriverException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_NoSuchElementException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/NoSuchElementException.html">NoSuchElementException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_NoSuchFrameException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/NoSuchFrameException.html">NoSuchFrameException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_NoSuchWindowException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/NoSuchWindowException.html">NoSuchWindowException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_NullPointerException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/NullPointerException.html">NullPointerException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_ScriptTimeoutException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/ScriptTimeoutException.html">ScriptTimeoutException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_SessionNotCreatedException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/SessionNotCreatedException.html">SessionNotCreatedException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_StaleElementReferenceException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/StaleElementReferenceException.html">StaleElementReferenceException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_TimeOutException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/TimeOutException.html">TimeOutException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_UnableToSetCookieException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/UnableToSetCookieException.html">UnableToSetCookieException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_UnexpectedAlertOpenException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/UnexpectedAlertOpenException.html">UnexpectedAlertOpenException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_UnexpectedJavascriptException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/UnexpectedJavascriptException.html">UnexpectedJavascriptException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_UnexpectedTagNameException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/UnexpectedTagNameException.html">UnexpectedTagNameException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_UnknownCommandException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/UnknownCommandException.html">UnknownCommandException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_UnknownServerException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/UnknownServerException.html">UnknownServerException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_UnrecognizedExceptionException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/UnrecognizedExceptionException.html">UnrecognizedExceptionException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_UnsupportedOperationException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/UnsupportedOperationException.html">UnsupportedOperationException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_WebDriverCurlException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/WebDriverCurlException.html">WebDriverCurlException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_WebDriverException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/WebDriverException.html">WebDriverException</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Exception_XPathLookupException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Exception/XPathLookupException.html">XPathLookupException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Facebook_WebDriver_Firefox" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Facebook/WebDriver/Firefox.html">Firefox</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Facebook_WebDriver_Firefox_FirefoxDriver" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Firefox/FirefoxDriver.html">FirefoxDriver</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Firefox_FirefoxProfile" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Firefox/FirefoxProfile.html">FirefoxProfile</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Facebook_WebDriver_Interactions" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Facebook/WebDriver/Interactions.html">Interactions</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Facebook_WebDriver_Interactions_Internal" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Facebook/WebDriver/Interactions/Internal.html">Internal</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Facebook_WebDriver_Interactions_Internal_WebDriverButtonReleaseAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Internal/WebDriverButtonReleaseAction.html">WebDriverButtonReleaseAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Internal_WebDriverClickAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Internal/WebDriverClickAction.html">WebDriverClickAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Internal_WebDriverClickAndHoldAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Internal/WebDriverClickAndHoldAction.html">WebDriverClickAndHoldAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Internal_WebDriverContextClickAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Internal/WebDriverContextClickAction.html">WebDriverContextClickAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Internal_WebDriverCoordinates" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Internal/WebDriverCoordinates.html">WebDriverCoordinates</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Internal_WebDriverDoubleClickAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Internal/WebDriverDoubleClickAction.html">WebDriverDoubleClickAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Internal_WebDriverKeyDownAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Internal/WebDriverKeyDownAction.html">WebDriverKeyDownAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Internal_WebDriverKeyUpAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Internal/WebDriverKeyUpAction.html">WebDriverKeyUpAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Internal_WebDriverKeysRelatedAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Internal/WebDriverKeysRelatedAction.html">WebDriverKeysRelatedAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Internal_WebDriverMouseAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Internal/WebDriverMouseAction.html">WebDriverMouseAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Internal_WebDriverMouseMoveAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Internal/WebDriverMouseMoveAction.html">WebDriverMouseMoveAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Internal_WebDriverMoveToOffsetAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Internal/WebDriverMoveToOffsetAction.html">WebDriverMoveToOffsetAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Internal_WebDriverSendKeysAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Internal/WebDriverSendKeysAction.html">WebDriverSendKeysAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Internal_WebDriverSingleKeyAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Internal/WebDriverSingleKeyAction.html">WebDriverSingleKeyAction</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Facebook_WebDriver_Interactions_Touch" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Facebook/WebDriver/Interactions/Touch.html">Touch</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Facebook_WebDriver_Interactions_Touch_WebDriverDoubleTapAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Touch/WebDriverDoubleTapAction.html">WebDriverDoubleTapAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Touch_WebDriverDownAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Touch/WebDriverDownAction.html">WebDriverDownAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Touch_WebDriverFlickAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Touch/WebDriverFlickAction.html">WebDriverFlickAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Touch_WebDriverFlickFromElementAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Touch/WebDriverFlickFromElementAction.html">WebDriverFlickFromElementAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Touch_WebDriverLongPressAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Touch/WebDriverLongPressAction.html">WebDriverLongPressAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Touch_WebDriverMoveAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Touch/WebDriverMoveAction.html">WebDriverMoveAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Touch_WebDriverScrollAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Touch/WebDriverScrollAction.html">WebDriverScrollAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Touch_WebDriverScrollFromElementAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Touch/WebDriverScrollFromElementAction.html">WebDriverScrollFromElementAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Touch_WebDriverTapAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Touch/WebDriverTapAction.html">WebDriverTapAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Touch_WebDriverTouchAction" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Touch/WebDriverTouchAction.html">WebDriverTouchAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_Touch_WebDriverTouchScreen" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/Touch/WebDriverTouchScreen.html">WebDriverTouchScreen</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_WebDriverActions" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/WebDriverActions.html">WebDriverActions</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_WebDriverCompositeAction" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/WebDriverCompositeAction.html">WebDriverCompositeAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Interactions_WebDriverTouchActions" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Interactions/WebDriverTouchActions.html">WebDriverTouchActions</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Facebook_WebDriver_Internal" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Facebook/WebDriver/Internal.html">Internal</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Facebook_WebDriver_Internal_WebDriverLocatable" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Internal/WebDriverLocatable.html">WebDriverLocatable</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Facebook_WebDriver_Net" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Facebook/WebDriver/Net.html">Net</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Facebook_WebDriver_Net_URLChecker" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Net/URLChecker.html">URLChecker</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Facebook_WebDriver_Remote" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Facebook/WebDriver/Remote.html">Remote</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Facebook_WebDriver_Remote_Service" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Facebook/WebDriver/Remote/Service.html">Service</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Facebook_WebDriver_Remote_Service_DriverCommandExecutor" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/Service/DriverCommandExecutor.html">DriverCommandExecutor</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Remote_Service_DriverService" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/Service/DriverService.html">DriverService</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Facebook_WebDriver_Remote_DesiredCapabilities" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/DesiredCapabilities.html">DesiredCapabilities</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Remote_DriverCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/DriverCommand.html">DriverCommand</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Remote_ExecuteMethod" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/ExecuteMethod.html">ExecuteMethod</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Remote_FileDetector" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/FileDetector.html">FileDetector</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Remote_HttpCommandExecutor" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/HttpCommandExecutor.html">HttpCommandExecutor</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Remote_LocalFileDetector" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/LocalFileDetector.html">LocalFileDetector</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Remote_RemoteExecuteMethod" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/RemoteExecuteMethod.html">RemoteExecuteMethod</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Remote_RemoteKeyboard" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/RemoteKeyboard.html">RemoteKeyboard</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Remote_RemoteMouse" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/RemoteMouse.html">RemoteMouse</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Remote_RemoteTargetLocator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/RemoteTargetLocator.html">RemoteTargetLocator</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Remote_RemoteTouchScreen" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/RemoteTouchScreen.html">RemoteTouchScreen</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Remote_RemoteWebDriver" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/RemoteWebDriver.html">RemoteWebDriver</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Remote_RemoteWebElement" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/RemoteWebElement.html">RemoteWebElement</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Remote_UselessFileDetector" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/UselessFileDetector.html">UselessFileDetector</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Remote_WebDriverBrowserType" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/WebDriverBrowserType.html">WebDriverBrowserType</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Remote_WebDriverCapabilityType" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/WebDriverCapabilityType.html">WebDriverCapabilityType</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Remote_WebDriverCommand" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/WebDriverCommand.html">WebDriverCommand</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Remote_WebDriverResponse" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Facebook/WebDriver/Remote/WebDriverResponse.html">WebDriverResponse</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href=".html">Support</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Facebook_WebDriver_Support_Events" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Facebook/WebDriver/Support/Events.html">Events</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Facebook_WebDriver_Support_Events_EventFiringWebDriver" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Support/Events/EventFiringWebDriver.html">EventFiringWebDriver</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Support_Events_EventFiringWebDriverNavigation" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Support/Events/EventFiringWebDriverNavigation.html">EventFiringWebDriverNavigation</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_Support_Events_EventFiringWebElement" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Facebook/WebDriver/Support/Events/EventFiringWebElement.html">EventFiringWebElement</a>                    </div>                </li>                </ul></div>                </li>                </ul></div>                </li>                            <li data-name="class:Facebook_WebDriver_JavaScriptExecutor" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/JavaScriptExecutor.html">JavaScriptExecutor</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriver" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriver.html">WebDriver</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverAction" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverAction.html">WebDriverAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverAlert" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverAlert.html">WebDriverAlert</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverBy" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverBy.html">WebDriverBy</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverCapabilities" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverCapabilities.html">WebDriverCapabilities</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverCommandExecutor" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverCommandExecutor.html">WebDriverCommandExecutor</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverDimension" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverDimension.html">WebDriverDimension</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverDispatcher" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverDispatcher.html">WebDriverDispatcher</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverElement" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverElement.html">WebDriverElement</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverEventListener" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverEventListener.html">WebDriverEventListener</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverExpectedCondition" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverExpectedCondition.html">WebDriverExpectedCondition</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverHasInputDevices" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverHasInputDevices.html">WebDriverHasInputDevices</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverKeyboard" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverKeyboard.html">WebDriverKeyboard</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverKeys" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverKeys.html">WebDriverKeys</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverMouse" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverMouse.html">WebDriverMouse</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverNavigation" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverNavigation.html">WebDriverNavigation</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverOptions" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverOptions.html">WebDriverOptions</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverPlatform" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverPlatform.html">WebDriverPlatform</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverPoint" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverPoint.html">WebDriverPoint</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverSearchContext" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverSearchContext.html">WebDriverSearchContext</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverSelect" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverSelect.html">WebDriverSelect</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverTargetLocator" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverTargetLocator.html">WebDriverTargetLocator</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverTimeouts" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverTimeouts.html">WebDriverTimeouts</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverUpAction" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverUpAction.html">WebDriverUpAction</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverWait" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverWait.html">WebDriverWait</a>                    </div>                </li>                            <li data-name="class:Facebook_WebDriver_WebDriverWindow" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Facebook/WebDriver/WebDriverWindow.html">WebDriverWindow</a>                    </div>                </li>                </ul></div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": ".html", "name": "", "doc": "Namespace "},
            {"type": "Interface",  "link": "ExecuteMethod.html", "name": "ExecuteMethod", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "ExecuteMethod", "fromLink": "ExecuteMethod.html", "link": "ExecuteMethod.html#method_execute", "name": "ExecuteMethod::execute", "doc": "&quot;&quot;"},
            
            {"type": "Interface",  "link": "FileDetector.html", "name": "FileDetector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "FileDetector", "fromLink": "FileDetector.html", "link": "FileDetector.html#method_getLocalFile", "name": "FileDetector::getLocalFile", "doc": "&quot;Try to detect whether the given $file is a file or not. Return the path\nof the file. Otherwise, return null.&quot;"},
            
            {"type": "Interface",  "link": "JavaScriptExecutor.html", "name": "JavaScriptExecutor", "doc": "&quot;WebDriver interface implemented by drivers that support JavaScript.&quot;"},
                                                        {"type": "Method", "fromName": "JavaScriptExecutor", "fromLink": "JavaScriptExecutor.html", "link": "JavaScriptExecutor.html#method_executeScript", "name": "JavaScriptExecutor::executeScript", "doc": "&quot;Inject a snippet of JavaScript into the page for execution in the context\nof the currently selected frame. The executed script is assumed to be\nsynchronous and the result of evaluating the script will be returned.&quot;"},
                    {"type": "Method", "fromName": "JavaScriptExecutor", "fromLink": "JavaScriptExecutor.html", "link": "JavaScriptExecutor.html#method_executeAsyncScript", "name": "JavaScriptExecutor::executeAsyncScript", "doc": "&quot;Inject a snippet of JavaScript into the page for asynchronous execution in\nthe context of the currently selected frame.&quot;"},
            
            {"type": "Interface",  "link": "WebDriver.html", "name": "WebDriver", "doc": "&quot;The interface for WebDriver.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_close", "name": "WebDriver::close", "doc": "&quot;Close the current window.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_get", "name": "WebDriver::get", "doc": "&quot;Load a new web page in the current browser window.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_getCurrentURL", "name": "WebDriver::getCurrentURL", "doc": "&quot;Get a string representing the current URL that the browser is looking at.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_getPageSource", "name": "WebDriver::getPageSource", "doc": "&quot;Get the source of the last loaded page.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_getTitle", "name": "WebDriver::getTitle", "doc": "&quot;Get the title of the current page.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_getWindowHandle", "name": "WebDriver::getWindowHandle", "doc": "&quot;Return an opaque handle to this window that uniquely identifies it within\nthis driver instance.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_getWindowHandles", "name": "WebDriver::getWindowHandles", "doc": "&quot;Get all window handles available to the current session.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_quit", "name": "WebDriver::quit", "doc": "&quot;Quits this driver, closing every associated window.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_takeScreenshot", "name": "WebDriver::takeScreenshot", "doc": "&quot;Take a screenshot of the current page.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_wait", "name": "WebDriver::wait", "doc": "&quot;Construct a new WebDriverWait by the current WebDriver instance.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_manage", "name": "WebDriver::manage", "doc": "&quot;An abstraction for managing stuff you would do in a browser menu. For\nexample, adding and deleting cookies.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_navigate", "name": "WebDriver::navigate", "doc": "&quot;An abstraction allowing the driver to access the browser&#039;s history and to\nnavigate to a given URL.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_switchTo", "name": "WebDriver::switchTo", "doc": "&quot;Switch to a different window or frame.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_execute", "name": "WebDriver::execute", "doc": "&quot;&quot;"},
            
            {"type": "Interface",  "link": "WebDriverAction.html", "name": "WebDriverAction", "doc": "&quot;Interface representing a single user-interaction action.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverAction", "fromLink": "WebDriverAction.html", "link": "WebDriverAction.html#method_perform", "name": "WebDriverAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Interface",  "link": "WebDriverCapabilities.html", "name": "WebDriverCapabilities", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverCapabilities", "fromLink": "WebDriverCapabilities.html", "link": "WebDriverCapabilities.html#method_getBrowserName", "name": "WebDriverCapabilities::getBrowserName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverCapabilities", "fromLink": "WebDriverCapabilities.html", "link": "WebDriverCapabilities.html#method_getCapability", "name": "WebDriverCapabilities::getCapability", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverCapabilities", "fromLink": "WebDriverCapabilities.html", "link": "WebDriverCapabilities.html#method_getPlatform", "name": "WebDriverCapabilities::getPlatform", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverCapabilities", "fromLink": "WebDriverCapabilities.html", "link": "WebDriverCapabilities.html#method_getVersion", "name": "WebDriverCapabilities::getVersion", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverCapabilities", "fromLink": "WebDriverCapabilities.html", "link": "WebDriverCapabilities.html#method_is", "name": "WebDriverCapabilities::is", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverCapabilities", "fromLink": "WebDriverCapabilities.html", "link": "WebDriverCapabilities.html#method_isJavascriptEnabled", "name": "WebDriverCapabilities::isJavascriptEnabled", "doc": "&quot;&quot;"},
            
            {"type": "Interface",  "link": "WebDriverCommandExecutor.html", "name": "WebDriverCommandExecutor", "doc": "&quot;Interface for all command executor.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverCommandExecutor", "fromLink": "WebDriverCommandExecutor.html", "link": "WebDriverCommandExecutor.html#method_execute", "name": "WebDriverCommandExecutor::execute", "doc": "&quot;&quot;"},
            
            {"type": "Interface",  "link": "WebDriverElement.html", "name": "WebDriverElement", "doc": "&quot;Interface for an HTML element in the WebDriver framework.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_clear", "name": "WebDriverElement::clear", "doc": "&quot;If this element is a TEXTAREA or text INPUT element, this will clear the\nvalue.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_click", "name": "WebDriverElement::click", "doc": "&quot;Click this element.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_getAttribute", "name": "WebDriverElement::getAttribute", "doc": "&quot;Get the value of a the given attribute of the element.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_getCSSValue", "name": "WebDriverElement::getCSSValue", "doc": "&quot;Get the value of a given CSS property.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_getLocation", "name": "WebDriverElement::getLocation", "doc": "&quot;Get the location of element relative to the top-left corner of the page.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_getLocationOnScreenOnceScrolledIntoView", "name": "WebDriverElement::getLocationOnScreenOnceScrolledIntoView", "doc": "&quot;Try scrolling the element into the view port and return the location of\nelement relative to the top-left corner of the page afterwards.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_getSize", "name": "WebDriverElement::getSize", "doc": "&quot;Get the size of element.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_getTagName", "name": "WebDriverElement::getTagName", "doc": "&quot;Get the tag name of this element.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_getText", "name": "WebDriverElement::getText", "doc": "&quot;Get the visible (i.e. not hidden by CSS) innerText of this element,\nincluding sub-elements, without any leading or trailing whitespace.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_isDisplayed", "name": "WebDriverElement::isDisplayed", "doc": "&quot;Is this element displayed or not? This method avoids the problem of having\nto parse an element&#039;s \&quot;style\&quot; attribute.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_isEnabled", "name": "WebDriverElement::isEnabled", "doc": "&quot;Is the element currently enabled or not? This will generally return true\nfor everything but disabled input elements.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_isSelected", "name": "WebDriverElement::isSelected", "doc": "&quot;Determine whether or not this element is selected or not.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_sendKeys", "name": "WebDriverElement::sendKeys", "doc": "&quot;Simulate typing into an element, which may set its value.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_submit", "name": "WebDriverElement::submit", "doc": "&quot;If this current element is a form, or an element within a form, then this\nwill be submitted to the remote server.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_getID", "name": "WebDriverElement::getID", "doc": "&quot;Get the opaque ID of the element.&quot;"},
            
            {"type": "Interface",  "link": "WebDriverEventListener.html", "name": "WebDriverEventListener", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_beforeNavigateTo", "name": "WebDriverEventListener::beforeNavigateTo", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_afterNavigateTo", "name": "WebDriverEventListener::afterNavigateTo", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_beforeNavigateBack", "name": "WebDriverEventListener::beforeNavigateBack", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_afterNavigateBack", "name": "WebDriverEventListener::afterNavigateBack", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_beforeNavigateForward", "name": "WebDriverEventListener::beforeNavigateForward", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_afterNavigateForward", "name": "WebDriverEventListener::afterNavigateForward", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_beforeFindBy", "name": "WebDriverEventListener::beforeFindBy", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_afterFindBy", "name": "WebDriverEventListener::afterFindBy", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_beforeScript", "name": "WebDriverEventListener::beforeScript", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_afterScript", "name": "WebDriverEventListener::afterScript", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_beforeClickOn", "name": "WebDriverEventListener::beforeClickOn", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_afterClickOn", "name": "WebDriverEventListener::afterClickOn", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_beforeChangeValueOf", "name": "WebDriverEventListener::beforeChangeValueOf", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_afterChangeValueOf", "name": "WebDriverEventListener::afterChangeValueOf", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_onException", "name": "WebDriverEventListener::onException", "doc": "&quot;&quot;"},
            
            {"type": "Interface",  "link": "WebDriverHasInputDevices.html", "name": "WebDriverHasInputDevices", "doc": "&quot;Interface implemented by each driver that allows access to the input devices.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverHasInputDevices", "fromLink": "WebDriverHasInputDevices.html", "link": "WebDriverHasInputDevices.html#method_getKeyboard", "name": "WebDriverHasInputDevices::getKeyboard", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverHasInputDevices", "fromLink": "WebDriverHasInputDevices.html", "link": "WebDriverHasInputDevices.html#method_getMouse", "name": "WebDriverHasInputDevices::getMouse", "doc": "&quot;&quot;"},
            
            {"type": "Interface",  "link": "WebDriverKeyboard.html", "name": "WebDriverKeyboard", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverKeyboard", "fromLink": "WebDriverKeyboard.html", "link": "WebDriverKeyboard.html#method_sendKeys", "name": "WebDriverKeyboard::sendKeys", "doc": "&quot;Send a sequence of keys.&quot;"},
                    {"type": "Method", "fromName": "WebDriverKeyboard", "fromLink": "WebDriverKeyboard.html", "link": "WebDriverKeyboard.html#method_pressKey", "name": "WebDriverKeyboard::pressKey", "doc": "&quot;Press a key&quot;"},
                    {"type": "Method", "fromName": "WebDriverKeyboard", "fromLink": "WebDriverKeyboard.html", "link": "WebDriverKeyboard.html#method_releaseKey", "name": "WebDriverKeyboard::releaseKey", "doc": "&quot;Release a key&quot;"},
            
            {"type": "Interface",  "link": "WebDriverLocatable.html", "name": "WebDriverLocatable", "doc": "&quot;Interface representing basic mouse operations.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverLocatable", "fromLink": "WebDriverLocatable.html", "link": "WebDriverLocatable.html#method_getCoordinates", "name": "WebDriverLocatable::getCoordinates", "doc": "&quot;&quot;"},
            
            {"type": "Interface",  "link": "WebDriverMouse.html", "name": "WebDriverMouse", "doc": "&quot;Interface representing basic mouse operations.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverMouse", "fromLink": "WebDriverMouse.html", "link": "WebDriverMouse.html#method_click", "name": "WebDriverMouse::click", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverMouse", "fromLink": "WebDriverMouse.html", "link": "WebDriverMouse.html#method_contextClick", "name": "WebDriverMouse::contextClick", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverMouse", "fromLink": "WebDriverMouse.html", "link": "WebDriverMouse.html#method_doubleClick", "name": "WebDriverMouse::doubleClick", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverMouse", "fromLink": "WebDriverMouse.html", "link": "WebDriverMouse.html#method_mouseDown", "name": "WebDriverMouse::mouseDown", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverMouse", "fromLink": "WebDriverMouse.html", "link": "WebDriverMouse.html#method_mouseMove", "name": "WebDriverMouse::mouseMove", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverMouse", "fromLink": "WebDriverMouse.html", "link": "WebDriverMouse.html#method_mouseUp", "name": "WebDriverMouse::mouseUp", "doc": "&quot;&quot;"},
            
            {"type": "Interface",  "link": "WebDriverSearchContext.html", "name": "WebDriverSearchContext", "doc": "&quot;The interface for WebDriver and WebDriverElement which is able to search for\nWebDriverElement inside.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverSearchContext", "fromLink": "WebDriverSearchContext.html", "link": "WebDriverSearchContext.html#method_findElement", "name": "WebDriverSearchContext::findElement", "doc": "&quot;Find the first WebDriverElement within this element using the given\nmechanism.&quot;"},
                    {"type": "Method", "fromName": "WebDriverSearchContext", "fromLink": "WebDriverSearchContext.html", "link": "WebDriverSearchContext.html#method_findElements", "name": "WebDriverSearchContext::findElements", "doc": "&quot;Find all WebDriverElements within this element using the given mechanism.&quot;"},
            
            {"type": "Interface",  "link": "WebDriverTargetLocator.html", "name": "WebDriverTargetLocator", "doc": "&quot;Used to locate a given frame or window.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverTargetLocator", "fromLink": "WebDriverTargetLocator.html", "link": "WebDriverTargetLocator.html#method_defaultContent", "name": "WebDriverTargetLocator::defaultContent", "doc": "&quot;Switch to the main document if the page contains iframes. Otherwise, switch\nto the first frame on the page.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTargetLocator", "fromLink": "WebDriverTargetLocator.html", "link": "WebDriverTargetLocator.html#method_frame", "name": "WebDriverTargetLocator::frame", "doc": "&quot;Switch to the iframe by its id or name.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTargetLocator", "fromLink": "WebDriverTargetLocator.html", "link": "WebDriverTargetLocator.html#method_window", "name": "WebDriverTargetLocator::window", "doc": "&quot;Switch the focus to another window by its handle.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTargetLocator", "fromLink": "WebDriverTargetLocator.html", "link": "WebDriverTargetLocator.html#method_alert", "name": "WebDriverTargetLocator::alert", "doc": "&quot;Switch to the currently active modal dialog for this particular driver\ninstance.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTargetLocator", "fromLink": "WebDriverTargetLocator.html", "link": "WebDriverTargetLocator.html#method_activeElement", "name": "WebDriverTargetLocator::activeElement", "doc": "&quot;Switches to the element that currently has focus within the document\ncurrently \&quot;switched to\&quot;, or the body element if this cannot be detected.&quot;"},
            
            {"type": "Interface",  "link": "WebDriverTouchScreen.html", "name": "WebDriverTouchScreen", "doc": "&quot;Interface representing touch screen operations.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_tap", "name": "WebDriverTouchScreen::tap", "doc": "&quot;Single tap on the touch enabled device.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_doubleTap", "name": "WebDriverTouchScreen::doubleTap", "doc": "&quot;Double tap on the touch screen using finger motion events.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_down", "name": "WebDriverTouchScreen::down", "doc": "&quot;Finger down on the screen.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_flick", "name": "WebDriverTouchScreen::flick", "doc": "&quot;Flick on the touch screen using finger motion events. Use this flick\ncommand if you don&#039;t care where the flick starts on the screen.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_flickFromElement", "name": "WebDriverTouchScreen::flickFromElement", "doc": "&quot;Flick on the touch screen using finger motion events.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_longPress", "name": "WebDriverTouchScreen::longPress", "doc": "&quot;Long press on the touch screen using finger motion events.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_move", "name": "WebDriverTouchScreen::move", "doc": "&quot;Finger move on the screen.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_scroll", "name": "WebDriverTouchScreen::scroll", "doc": "&quot;Scroll on the touch screen using finger based motion events. Use this\ncommand if you don&#039;t care where the scroll starts on the screen.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_scrollFromElement", "name": "WebDriverTouchScreen::scrollFromElement", "doc": "&quot;Scroll on the touch screen using finger based motion events. Use this\ncommand to start scrolling at a particular screen location.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_up", "name": "WebDriverTouchScreen::up", "doc": "&quot;Finger up on the screen.&quot;"},
            
            
            {"type": "Class",  "link": "ChromeDriver.html", "name": "ChromeDriver", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "ChromeDriver", "fromLink": "ChromeDriver.html", "link": "ChromeDriver.html#method_start", "name": "ChromeDriver::start", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ChromeDriver", "fromLink": "ChromeDriver.html", "link": "ChromeDriver.html#method_startSession", "name": "ChromeDriver::startSession", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ChromeDriver", "fromLink": "ChromeDriver.html", "link": "ChromeDriver.html#method_create", "name": "ChromeDriver::create", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ChromeDriver", "fromLink": "ChromeDriver.html", "link": "ChromeDriver.html#method_createBySessionID", "name": "ChromeDriver::createBySessionID", "doc": "&quot;[Experimental] Construct the RemoteWebDriver by an existing session.&quot;"},
            
            {"type": "Class",  "link": "ChromeDriverService.html", "name": "ChromeDriverService", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "ChromeDriverService", "fromLink": "ChromeDriverService.html", "link": "ChromeDriverService.html#method_createDefaultService", "name": "ChromeDriverService::createDefaultService", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "ChromeOptions.html", "name": "ChromeOptions", "doc": "&quot;The class manages the capabilities in ChromeDriver.&quot;"},
                                                        {"type": "Method", "fromName": "ChromeOptions", "fromLink": "ChromeOptions.html", "link": "ChromeOptions.html#method_setBinary", "name": "ChromeOptions::setBinary", "doc": "&quot;Sets the path of the Chrome executable. The path should be either absolute\nor relative to the location running ChromeDriver server.&quot;"},
                    {"type": "Method", "fromName": "ChromeOptions", "fromLink": "ChromeOptions.html", "link": "ChromeOptions.html#method_addArguments", "name": "ChromeOptions::addArguments", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ChromeOptions", "fromLink": "ChromeOptions.html", "link": "ChromeOptions.html#method_addExtensions", "name": "ChromeOptions::addExtensions", "doc": "&quot;Add a Chrome extension to install on browser startup. Each path should be\na packed Chrome extension.&quot;"},
                    {"type": "Method", "fromName": "ChromeOptions", "fromLink": "ChromeOptions.html", "link": "ChromeOptions.html#method_addEncodedExtensions", "name": "ChromeOptions::addEncodedExtensions", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ChromeOptions", "fromLink": "ChromeOptions.html", "link": "ChromeOptions.html#method_setExperimentalOption", "name": "ChromeOptions::setExperimentalOption", "doc": "&quot;Sets an experimental option which has not exposed officially.&quot;"},
                    {"type": "Method", "fromName": "ChromeOptions", "fromLink": "ChromeOptions.html", "link": "ChromeOptions.html#method_toCapabilities", "name": "ChromeOptions::toCapabilities", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "ChromeOptions", "fromLink": "ChromeOptions.html", "link": "ChromeOptions.html#method_toArray", "name": "ChromeOptions::toArray", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "DesiredCapabilities.html", "name": "DesiredCapabilities", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method___construct", "name": "DesiredCapabilities::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_getBrowserName", "name": "DesiredCapabilities::getBrowserName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_setBrowserName", "name": "DesiredCapabilities::setBrowserName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_getVersion", "name": "DesiredCapabilities::getVersion", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_setVersion", "name": "DesiredCapabilities::setVersion", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_getCapability", "name": "DesiredCapabilities::getCapability", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_setCapability", "name": "DesiredCapabilities::setCapability", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_getPlatform", "name": "DesiredCapabilities::getPlatform", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_setPlatform", "name": "DesiredCapabilities::setPlatform", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_is", "name": "DesiredCapabilities::is", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_isJavascriptEnabled", "name": "DesiredCapabilities::isJavascriptEnabled", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_setJavascriptEnabled", "name": "DesiredCapabilities::setJavascriptEnabled", "doc": "&quot;This is a htmlUnit-only option.&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_toArray", "name": "DesiredCapabilities::toArray", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_android", "name": "DesiredCapabilities::android", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_chrome", "name": "DesiredCapabilities::chrome", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_firefox", "name": "DesiredCapabilities::firefox", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_htmlUnit", "name": "DesiredCapabilities::htmlUnit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_htmlUnitWithJS", "name": "DesiredCapabilities::htmlUnitWithJS", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_internetExplorer", "name": "DesiredCapabilities::internetExplorer", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_iphone", "name": "DesiredCapabilities::iphone", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_ipad", "name": "DesiredCapabilities::ipad", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_opera", "name": "DesiredCapabilities::opera", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_safari", "name": "DesiredCapabilities::safari", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DesiredCapabilities", "fromLink": "DesiredCapabilities.html", "link": "DesiredCapabilities.html#method_phantomjs", "name": "DesiredCapabilities::phantomjs", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "DriverCommand.html", "name": "DriverCommand", "doc": "&quot;This list of command defined in the WebDriver json wire protocol.&quot;"},
                    
            {"type": "Class",  "link": "DriverCommandExecutor.html", "name": "DriverCommandExecutor", "doc": "&quot;A HttpCommandExecutor that talks to a local driver service instead of\na remote server.&quot;"},
                                                        {"type": "Method", "fromName": "DriverCommandExecutor", "fromLink": "DriverCommandExecutor.html", "link": "DriverCommandExecutor.html#method___construct", "name": "DriverCommandExecutor::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DriverCommandExecutor", "fromLink": "DriverCommandExecutor.html", "link": "DriverCommandExecutor.html#method_execute", "name": "DriverCommandExecutor::execute", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "DriverService.html", "name": "DriverService", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "DriverService", "fromLink": "DriverService.html", "link": "DriverService.html#method___construct", "name": "DriverService::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DriverService", "fromLink": "DriverService.html", "link": "DriverService.html#method_getURL", "name": "DriverService::getURL", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DriverService", "fromLink": "DriverService.html", "link": "DriverService.html#method_start", "name": "DriverService::start", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DriverService", "fromLink": "DriverService.html", "link": "DriverService.html#method_stop", "name": "DriverService::stop", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DriverService", "fromLink": "DriverService.html", "link": "DriverService.html#method_isRunning", "name": "DriverService::isRunning", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "DriverService", "fromLink": "DriverService.html", "link": "DriverService.html#method_checkExecutable", "name": "DriverService::checkExecutable", "doc": "&quot;Check if the executable is executable.&quot;"},
            
            {"type": "Class",  "link": "ElementNotSelectableException.html", "name": "ElementNotSelectableException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "ElementNotVisibleException.html", "name": "ElementNotVisibleException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "EventFiringWebDriver.html", "name": "EventFiringWebDriver", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method___construct", "name": "EventFiringWebDriver::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_getDispatcher", "name": "EventFiringWebDriver::getDispatcher", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_dispatch", "name": "EventFiringWebDriver::dispatch", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_getWebDriver", "name": "EventFiringWebDriver::getWebDriver", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_get", "name": "EventFiringWebDriver::get", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_findElements", "name": "EventFiringWebDriver::findElements", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_findElement", "name": "EventFiringWebDriver::findElement", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_executeScript", "name": "EventFiringWebDriver::executeScript", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_executeAsyncScript", "name": "EventFiringWebDriver::executeAsyncScript", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_close", "name": "EventFiringWebDriver::close", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_getCurrentURL", "name": "EventFiringWebDriver::getCurrentURL", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_getPageSource", "name": "EventFiringWebDriver::getPageSource", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_getTitle", "name": "EventFiringWebDriver::getTitle", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_getWindowHandle", "name": "EventFiringWebDriver::getWindowHandle", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_getWindowHandles", "name": "EventFiringWebDriver::getWindowHandles", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_quit", "name": "EventFiringWebDriver::quit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_takeScreenshot", "name": "EventFiringWebDriver::takeScreenshot", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_wait", "name": "EventFiringWebDriver::wait", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_manage", "name": "EventFiringWebDriver::manage", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_navigate", "name": "EventFiringWebDriver::navigate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_switchTo", "name": "EventFiringWebDriver::switchTo", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_getTouch", "name": "EventFiringWebDriver::getTouch", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriver", "fromLink": "EventFiringWebDriver.html", "link": "EventFiringWebDriver.html#method_execute", "name": "EventFiringWebDriver::execute", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "EventFiringWebDriverNavigation.html", "name": "EventFiringWebDriverNavigation", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "EventFiringWebDriverNavigation", "fromLink": "EventFiringWebDriverNavigation.html", "link": "EventFiringWebDriverNavigation.html#method___construct", "name": "EventFiringWebDriverNavigation::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriverNavigation", "fromLink": "EventFiringWebDriverNavigation.html", "link": "EventFiringWebDriverNavigation.html#method_getDispatcher", "name": "EventFiringWebDriverNavigation::getDispatcher", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriverNavigation", "fromLink": "EventFiringWebDriverNavigation.html", "link": "EventFiringWebDriverNavigation.html#method_dispatch", "name": "EventFiringWebDriverNavigation::dispatch", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriverNavigation", "fromLink": "EventFiringWebDriverNavigation.html", "link": "EventFiringWebDriverNavigation.html#method_getNavigator", "name": "EventFiringWebDriverNavigation::getNavigator", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriverNavigation", "fromLink": "EventFiringWebDriverNavigation.html", "link": "EventFiringWebDriverNavigation.html#method_back", "name": "EventFiringWebDriverNavigation::back", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriverNavigation", "fromLink": "EventFiringWebDriverNavigation.html", "link": "EventFiringWebDriverNavigation.html#method_forward", "name": "EventFiringWebDriverNavigation::forward", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriverNavigation", "fromLink": "EventFiringWebDriverNavigation.html", "link": "EventFiringWebDriverNavigation.html#method_refresh", "name": "EventFiringWebDriverNavigation::refresh", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebDriverNavigation", "fromLink": "EventFiringWebDriverNavigation.html", "link": "EventFiringWebDriverNavigation.html#method_to", "name": "EventFiringWebDriverNavigation::to", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "EventFiringWebElement.html", "name": "EventFiringWebElement", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method___construct", "name": "EventFiringWebElement::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_getDispatcher", "name": "EventFiringWebElement::getDispatcher", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_dispatch", "name": "EventFiringWebElement::dispatch", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_getElement", "name": "EventFiringWebElement::getElement", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_sendKeys", "name": "EventFiringWebElement::sendKeys", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_click", "name": "EventFiringWebElement::click", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_findElement", "name": "EventFiringWebElement::findElement", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_findElements", "name": "EventFiringWebElement::findElements", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_clear", "name": "EventFiringWebElement::clear", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_getAttribute", "name": "EventFiringWebElement::getAttribute", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_getCSSValue", "name": "EventFiringWebElement::getCSSValue", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_getLocation", "name": "EventFiringWebElement::getLocation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_getLocationOnScreenOnceScrolledIntoView", "name": "EventFiringWebElement::getLocationOnScreenOnceScrolledIntoView", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_getCoordinates", "name": "EventFiringWebElement::getCoordinates", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_getSize", "name": "EventFiringWebElement::getSize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_getTagName", "name": "EventFiringWebElement::getTagName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_getText", "name": "EventFiringWebElement::getText", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_isDisplayed", "name": "EventFiringWebElement::isDisplayed", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_isEnabled", "name": "EventFiringWebElement::isEnabled", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_isSelected", "name": "EventFiringWebElement::isSelected", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_submit", "name": "EventFiringWebElement::submit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_getID", "name": "EventFiringWebElement::getID", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "EventFiringWebElement", "fromLink": "EventFiringWebElement.html", "link": "EventFiringWebElement.html#method_equals", "name": "EventFiringWebElement::equals", "doc": "&quot;Test if two element IDs refer to the same DOM element.&quot;"},
            
            {"type": "Class",  "link": "ExecuteMethod.html", "name": "ExecuteMethod", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "ExecuteMethod", "fromLink": "ExecuteMethod.html", "link": "ExecuteMethod.html#method_execute", "name": "ExecuteMethod::execute", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "ExpectedException.html", "name": "ExpectedException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "FileDetector.html", "name": "FileDetector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "FileDetector", "fromLink": "FileDetector.html", "link": "FileDetector.html#method_getLocalFile", "name": "FileDetector::getLocalFile", "doc": "&quot;Try to detect whether the given $file is a file or not. Return the path\nof the file. Otherwise, return null.&quot;"},
            
            {"type": "Class",  "link": "FirefoxDriver.html", "name": "FirefoxDriver", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "FirefoxProfile.html", "name": "FirefoxProfile", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "FirefoxProfile", "fromLink": "FirefoxProfile.html", "link": "FirefoxProfile.html#method_addExtension", "name": "FirefoxProfile::addExtension", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "FirefoxProfile", "fromLink": "FirefoxProfile.html", "link": "FirefoxProfile.html#method_setPreference", "name": "FirefoxProfile::setPreference", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "FirefoxProfile", "fromLink": "FirefoxProfile.html", "link": "FirefoxProfile.html#method_encode", "name": "FirefoxProfile::encode", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "HttpCommandExecutor.html", "name": "HttpCommandExecutor", "doc": "&quot;Command executor talking to the standalone server via HTTP.&quot;"},
                                                        {"type": "Method", "fromName": "HttpCommandExecutor", "fromLink": "HttpCommandExecutor.html", "link": "HttpCommandExecutor.html#method___construct", "name": "HttpCommandExecutor::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HttpCommandExecutor", "fromLink": "HttpCommandExecutor.html", "link": "HttpCommandExecutor.html#method_setConnectionTimeout", "name": "HttpCommandExecutor::setConnectionTimeout", "doc": "&quot;Set timeout for the connect phase&quot;"},
                    {"type": "Method", "fromName": "HttpCommandExecutor", "fromLink": "HttpCommandExecutor.html", "link": "HttpCommandExecutor.html#method_setRequestTimeout", "name": "HttpCommandExecutor::setRequestTimeout", "doc": "&quot;Set the maximum time of a request&quot;"},
                    {"type": "Method", "fromName": "HttpCommandExecutor", "fromLink": "HttpCommandExecutor.html", "link": "HttpCommandExecutor.html#method_execute", "name": "HttpCommandExecutor::execute", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "HttpCommandExecutor", "fromLink": "HttpCommandExecutor.html", "link": "HttpCommandExecutor.html#method_getAddressOfRemoteServer", "name": "HttpCommandExecutor::getAddressOfRemoteServer", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "IMEEngineActivationFailedException.html", "name": "IMEEngineActivationFailedException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "IMENotAvailableException.html", "name": "IMENotAvailableException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "IndexOutOfBoundsException.html", "name": "IndexOutOfBoundsException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "InvalidCookieDomainException.html", "name": "InvalidCookieDomainException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "InvalidCoordinatesException.html", "name": "InvalidCoordinatesException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "InvalidElementStateException.html", "name": "InvalidElementStateException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "InvalidSelectorException.html", "name": "InvalidSelectorException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "JavaScriptExecutor.html", "name": "JavaScriptExecutor", "doc": "&quot;WebDriver interface implemented by drivers that support JavaScript.&quot;"},
                                                        {"type": "Method", "fromName": "JavaScriptExecutor", "fromLink": "JavaScriptExecutor.html", "link": "JavaScriptExecutor.html#method_executeScript", "name": "JavaScriptExecutor::executeScript", "doc": "&quot;Inject a snippet of JavaScript into the page for execution in the context\nof the currently selected frame. The executed script is assumed to be\nsynchronous and the result of evaluating the script will be returned.&quot;"},
                    {"type": "Method", "fromName": "JavaScriptExecutor", "fromLink": "JavaScriptExecutor.html", "link": "JavaScriptExecutor.html#method_executeAsyncScript", "name": "JavaScriptExecutor::executeAsyncScript", "doc": "&quot;Inject a snippet of JavaScript into the page for asynchronous execution in\nthe context of the currently selected frame.&quot;"},
            
            {"type": "Class",  "link": "LocalFileDetector.html", "name": "LocalFileDetector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "LocalFileDetector", "fromLink": "LocalFileDetector.html", "link": "LocalFileDetector.html#method_getLocalFile", "name": "LocalFileDetector::getLocalFile", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "MoveTargetOutOfBoundsException.html", "name": "MoveTargetOutOfBoundsException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "NoAlertOpenException.html", "name": "NoAlertOpenException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "NoCollectionException.html", "name": "NoCollectionException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "NoScriptResultException.html", "name": "NoScriptResultException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "NoStringException.html", "name": "NoStringException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "NoStringLengthException.html", "name": "NoStringLengthException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "NoStringWrapperException.html", "name": "NoStringWrapperException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "NoSuchCollectionException.html", "name": "NoSuchCollectionException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "NoSuchDocumentException.html", "name": "NoSuchDocumentException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "NoSuchDriverException.html", "name": "NoSuchDriverException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "NoSuchElementException.html", "name": "NoSuchElementException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "NoSuchFrameException.html", "name": "NoSuchFrameException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "NoSuchWindowException.html", "name": "NoSuchWindowException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "NullPointerException.html", "name": "NullPointerException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "RemoteExecuteMethod.html", "name": "RemoteExecuteMethod", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "RemoteExecuteMethod", "fromLink": "RemoteExecuteMethod.html", "link": "RemoteExecuteMethod.html#method___construct", "name": "RemoteExecuteMethod::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteExecuteMethod", "fromLink": "RemoteExecuteMethod.html", "link": "RemoteExecuteMethod.html#method_execute", "name": "RemoteExecuteMethod::execute", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "RemoteKeyboard.html", "name": "RemoteKeyboard", "doc": "&quot;Execute keyboard commands for RemoteWebDriver.&quot;"},
                                                        {"type": "Method", "fromName": "RemoteKeyboard", "fromLink": "RemoteKeyboard.html", "link": "RemoteKeyboard.html#method___construct", "name": "RemoteKeyboard::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteKeyboard", "fromLink": "RemoteKeyboard.html", "link": "RemoteKeyboard.html#method_sendKeys", "name": "RemoteKeyboard::sendKeys", "doc": "&quot;Send keys to active element&quot;"},
                    {"type": "Method", "fromName": "RemoteKeyboard", "fromLink": "RemoteKeyboard.html", "link": "RemoteKeyboard.html#method_pressKey", "name": "RemoteKeyboard::pressKey", "doc": "&quot;Press a modifier key&quot;"},
                    {"type": "Method", "fromName": "RemoteKeyboard", "fromLink": "RemoteKeyboard.html", "link": "RemoteKeyboard.html#method_releaseKey", "name": "RemoteKeyboard::releaseKey", "doc": "&quot;Release a modifier key&quot;"},
            
            {"type": "Class",  "link": "RemoteMouse.html", "name": "RemoteMouse", "doc": "&quot;Execute mouse commands for RemoteWebDriver.&quot;"},
                                                        {"type": "Method", "fromName": "RemoteMouse", "fromLink": "RemoteMouse.html", "link": "RemoteMouse.html#method___construct", "name": "RemoteMouse::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteMouse", "fromLink": "RemoteMouse.html", "link": "RemoteMouse.html#method_click", "name": "RemoteMouse::click", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteMouse", "fromLink": "RemoteMouse.html", "link": "RemoteMouse.html#method_contextClick", "name": "RemoteMouse::contextClick", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteMouse", "fromLink": "RemoteMouse.html", "link": "RemoteMouse.html#method_doubleClick", "name": "RemoteMouse::doubleClick", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteMouse", "fromLink": "RemoteMouse.html", "link": "RemoteMouse.html#method_mouseDown", "name": "RemoteMouse::mouseDown", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteMouse", "fromLink": "RemoteMouse.html", "link": "RemoteMouse.html#method_mouseMove", "name": "RemoteMouse::mouseMove", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteMouse", "fromLink": "RemoteMouse.html", "link": "RemoteMouse.html#method_mouseUp", "name": "RemoteMouse::mouseUp", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteMouse", "fromLink": "RemoteMouse.html", "link": "RemoteMouse.html#method_moveIfNeeded", "name": "RemoteMouse::moveIfNeeded", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "RemoteTargetLocator.html", "name": "RemoteTargetLocator", "doc": "&quot;Used to locate a given frame or window for RemoteWebDriver.&quot;"},
                                                        {"type": "Method", "fromName": "RemoteTargetLocator", "fromLink": "RemoteTargetLocator.html", "link": "RemoteTargetLocator.html#method___construct", "name": "RemoteTargetLocator::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteTargetLocator", "fromLink": "RemoteTargetLocator.html", "link": "RemoteTargetLocator.html#method_defaultContent", "name": "RemoteTargetLocator::defaultContent", "doc": "&quot;Switch to the main document if the page contains iframes. Otherwise, switch\nto the first frame on the page.&quot;"},
                    {"type": "Method", "fromName": "RemoteTargetLocator", "fromLink": "RemoteTargetLocator.html", "link": "RemoteTargetLocator.html#method_frame", "name": "RemoteTargetLocator::frame", "doc": "&quot;Switch to the iframe by its id or name.&quot;"},
                    {"type": "Method", "fromName": "RemoteTargetLocator", "fromLink": "RemoteTargetLocator.html", "link": "RemoteTargetLocator.html#method_window", "name": "RemoteTargetLocator::window", "doc": "&quot;Switch the focus to another window by its handle.&quot;"},
                    {"type": "Method", "fromName": "RemoteTargetLocator", "fromLink": "RemoteTargetLocator.html", "link": "RemoteTargetLocator.html#method_alert", "name": "RemoteTargetLocator::alert", "doc": "&quot;Switch to the currently active modal dialog for this particular driver\ninstance.&quot;"},
                    {"type": "Method", "fromName": "RemoteTargetLocator", "fromLink": "RemoteTargetLocator.html", "link": "RemoteTargetLocator.html#method_activeElement", "name": "RemoteTargetLocator::activeElement", "doc": "&quot;Switches to the element that currently has focus within the document\ncurrently \&quot;switched to\&quot;, or the body element if this cannot be detected.&quot;"},
            
            {"type": "Class",  "link": "RemoteTouchScreen.html", "name": "RemoteTouchScreen", "doc": "&quot;Execute touch commands for RemoteWebDriver.&quot;"},
                                                        {"type": "Method", "fromName": "RemoteTouchScreen", "fromLink": "RemoteTouchScreen.html", "link": "RemoteTouchScreen.html#method___construct", "name": "RemoteTouchScreen::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteTouchScreen", "fromLink": "RemoteTouchScreen.html", "link": "RemoteTouchScreen.html#method_tap", "name": "RemoteTouchScreen::tap", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteTouchScreen", "fromLink": "RemoteTouchScreen.html", "link": "RemoteTouchScreen.html#method_doubleTap", "name": "RemoteTouchScreen::doubleTap", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteTouchScreen", "fromLink": "RemoteTouchScreen.html", "link": "RemoteTouchScreen.html#method_down", "name": "RemoteTouchScreen::down", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteTouchScreen", "fromLink": "RemoteTouchScreen.html", "link": "RemoteTouchScreen.html#method_flick", "name": "RemoteTouchScreen::flick", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteTouchScreen", "fromLink": "RemoteTouchScreen.html", "link": "RemoteTouchScreen.html#method_flickFromElement", "name": "RemoteTouchScreen::flickFromElement", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteTouchScreen", "fromLink": "RemoteTouchScreen.html", "link": "RemoteTouchScreen.html#method_longPress", "name": "RemoteTouchScreen::longPress", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteTouchScreen", "fromLink": "RemoteTouchScreen.html", "link": "RemoteTouchScreen.html#method_move", "name": "RemoteTouchScreen::move", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteTouchScreen", "fromLink": "RemoteTouchScreen.html", "link": "RemoteTouchScreen.html#method_scroll", "name": "RemoteTouchScreen::scroll", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteTouchScreen", "fromLink": "RemoteTouchScreen.html", "link": "RemoteTouchScreen.html#method_scrollFromElement", "name": "RemoteTouchScreen::scrollFromElement", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteTouchScreen", "fromLink": "RemoteTouchScreen.html", "link": "RemoteTouchScreen.html#method_up", "name": "RemoteTouchScreen::up", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "RemoteWebDriver.html", "name": "RemoteWebDriver", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method___construct", "name": "RemoteWebDriver::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_create", "name": "RemoteWebDriver::create", "doc": "&quot;Construct the RemoteWebDriver by a desired capabilities.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_createBySessionID", "name": "RemoteWebDriver::createBySessionID", "doc": "&quot;[Experimental] Construct the RemoteWebDriver by an existing session.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_close", "name": "RemoteWebDriver::close", "doc": "&quot;Close the current window.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_findElement", "name": "RemoteWebDriver::findElement", "doc": "&quot;Find the first WebDriverElement using the given mechanism.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_findElements", "name": "RemoteWebDriver::findElements", "doc": "&quot;Find all WebDriverElements within the current page using the given\nmechanism.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_get", "name": "RemoteWebDriver::get", "doc": "&quot;Load a new web page in the current browser window.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_getCurrentURL", "name": "RemoteWebDriver::getCurrentURL", "doc": "&quot;Get a string representing the current URL that the browser is looking at.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_getPageSource", "name": "RemoteWebDriver::getPageSource", "doc": "&quot;Get the source of the last loaded page.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_getTitle", "name": "RemoteWebDriver::getTitle", "doc": "&quot;Get the title of the current page.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_getWindowHandle", "name": "RemoteWebDriver::getWindowHandle", "doc": "&quot;Return an opaque handle to this window that uniquely identifies it within\nthis driver instance.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_getWindowHandles", "name": "RemoteWebDriver::getWindowHandles", "doc": "&quot;Get all window handles available to the current session.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_quit", "name": "RemoteWebDriver::quit", "doc": "&quot;Quits this driver, closing every associated window.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_executeScript", "name": "RemoteWebDriver::executeScript", "doc": "&quot;Inject a snippet of JavaScript into the page for execution in the context\nof the currently selected frame. The executed script is assumed to be\nsynchronous and the result of evaluating the script will be returned.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_executeAsyncScript", "name": "RemoteWebDriver::executeAsyncScript", "doc": "&quot;Inject a snippet of JavaScript into the page for asynchronous execution in\nthe context of the currently selected frame.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_takeScreenshot", "name": "RemoteWebDriver::takeScreenshot", "doc": "&quot;Take a screenshot of the current page.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_wait", "name": "RemoteWebDriver::wait", "doc": "&quot;Construct a new WebDriverWait by the current WebDriver instance.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_manage", "name": "RemoteWebDriver::manage", "doc": "&quot;An abstraction for managing stuff you would do in a browser menu. For\nexample, adding and deleting cookies.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_navigate", "name": "RemoteWebDriver::navigate", "doc": "&quot;An abstraction allowing the driver to access the browser&#039;s history and to\nnavigate to a given URL.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_switchTo", "name": "RemoteWebDriver::switchTo", "doc": "&quot;Switch to a different window or frame.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_getMouse", "name": "RemoteWebDriver::getMouse", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_getKeyboard", "name": "RemoteWebDriver::getKeyboard", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_getTouch", "name": "RemoteWebDriver::getTouch", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_getExecuteMethod", "name": "RemoteWebDriver::getExecuteMethod", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_action", "name": "RemoteWebDriver::action", "doc": "&quot;Construct a new action builder.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_setCommandExecutor", "name": "RemoteWebDriver::setCommandExecutor", "doc": "&quot;Set the command executor of this RemoteWebdriver&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_getCommandExecutor", "name": "RemoteWebDriver::getCommandExecutor", "doc": "&quot;Set the command executor of this RemoteWebdriver&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_setSessionID", "name": "RemoteWebDriver::setSessionID", "doc": "&quot;Set the session id of the RemoteWebDriver.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_getSessionID", "name": "RemoteWebDriver::getSessionID", "doc": "&quot;Get current selenium sessionID&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_getAllSessions", "name": "RemoteWebDriver::getAllSessions", "doc": "&quot;Get all selenium sessions.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebDriver", "fromLink": "RemoteWebDriver.html", "link": "RemoteWebDriver.html#method_execute", "name": "RemoteWebDriver::execute", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "RemoteWebElement.html", "name": "RemoteWebElement", "doc": "&quot;Represents an HTML element.&quot;"},
                                                        {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method___construct", "name": "RemoteWebElement::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_clear", "name": "RemoteWebElement::clear", "doc": "&quot;If this element is a TEXTAREA or text INPUT element, this will clear the\nvalue.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_click", "name": "RemoteWebElement::click", "doc": "&quot;Click this element.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_findElement", "name": "RemoteWebElement::findElement", "doc": "&quot;Find the first WebDriverElement within this element using the given\nmechanism.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_findElements", "name": "RemoteWebElement::findElements", "doc": "&quot;Find all WebDriverElements within this element using the given mechanism.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_getAttribute", "name": "RemoteWebElement::getAttribute", "doc": "&quot;Get the value of a the given attribute of the element.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_getCSSValue", "name": "RemoteWebElement::getCSSValue", "doc": "&quot;Get the value of a given CSS property.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_getLocation", "name": "RemoteWebElement::getLocation", "doc": "&quot;Get the location of element relative to the top-left corner of the page.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_getLocationOnScreenOnceScrolledIntoView", "name": "RemoteWebElement::getLocationOnScreenOnceScrolledIntoView", "doc": "&quot;Try scrolling the element into the view port and return the location of\nelement relative to the top-left corner of the page afterwards.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_getCoordinates", "name": "RemoteWebElement::getCoordinates", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_getSize", "name": "RemoteWebElement::getSize", "doc": "&quot;Get the size of element.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_getTagName", "name": "RemoteWebElement::getTagName", "doc": "&quot;Get the tag name of this element.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_getText", "name": "RemoteWebElement::getText", "doc": "&quot;Get the visible (i.e. not hidden by CSS) innerText of this element,\nincluding sub-elements, without any leading or trailing whitespace.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_isDisplayed", "name": "RemoteWebElement::isDisplayed", "doc": "&quot;Is this element displayed or not? This method avoids the problem of having\nto parse an element&#039;s \&quot;style\&quot; attribute.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_isEnabled", "name": "RemoteWebElement::isEnabled", "doc": "&quot;Is the element currently enabled or not? This will generally return true\nfor everything but disabled input elements.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_isSelected", "name": "RemoteWebElement::isSelected", "doc": "&quot;Determine whether or not this element is selected or not.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_sendKeys", "name": "RemoteWebElement::sendKeys", "doc": "&quot;Simulate typing into an element, which may set its value.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_setFileDetector", "name": "RemoteWebElement::setFileDetector", "doc": "&quot;Set the fileDetector in order to let the RemoteWebElement to know that\nyou are going to upload a file.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_submit", "name": "RemoteWebElement::submit", "doc": "&quot;If this current element is a form, or an element within a form, then this\nwill be submitted to the remote server.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_getID", "name": "RemoteWebElement::getID", "doc": "&quot;Get the opaque ID of the element.&quot;"},
                    {"type": "Method", "fromName": "RemoteWebElement", "fromLink": "RemoteWebElement.html", "link": "RemoteWebElement.html#method_equals", "name": "RemoteWebElement::equals", "doc": "&quot;Test if two element IDs refer to the same DOM element.&quot;"},
            
            {"type": "Class",  "link": "ScriptTimeoutException.html", "name": "ScriptTimeoutException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "SessionNotCreatedException.html", "name": "SessionNotCreatedException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "StaleElementReferenceException.html", "name": "StaleElementReferenceException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "TimeOutException.html", "name": "TimeOutException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "URLChecker.html", "name": "URLChecker", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "URLChecker", "fromLink": "URLChecker.html", "link": "URLChecker.html#method_waitUntilAvailable", "name": "URLChecker::waitUntilAvailable", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "URLChecker", "fromLink": "URLChecker.html", "link": "URLChecker.html#method_waitUntilUnavailable", "name": "URLChecker::waitUntilUnavailable", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "UnableToSetCookieException.html", "name": "UnableToSetCookieException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "UnexpectedAlertOpenException.html", "name": "UnexpectedAlertOpenException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "UnexpectedJavascriptException.html", "name": "UnexpectedJavascriptException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "UnexpectedTagNameException.html", "name": "UnexpectedTagNameException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "UnexpectedTagNameException", "fromLink": "UnexpectedTagNameException.html", "link": "UnexpectedTagNameException.html#method___construct", "name": "UnexpectedTagNameException::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "UnknownCommandException.html", "name": "UnknownCommandException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "UnknownServerException.html", "name": "UnknownServerException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "UnrecognizedExceptionException.html", "name": "UnrecognizedExceptionException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "UnsupportedOperationException.html", "name": "UnsupportedOperationException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "UselessFileDetector.html", "name": "UselessFileDetector", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "UselessFileDetector", "fromLink": "UselessFileDetector.html", "link": "UselessFileDetector.html#method_getLocalFile", "name": "UselessFileDetector::getLocalFile", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriver.html", "name": "WebDriver", "doc": "&quot;The interface for WebDriver.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_close", "name": "WebDriver::close", "doc": "&quot;Close the current window.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_get", "name": "WebDriver::get", "doc": "&quot;Load a new web page in the current browser window.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_getCurrentURL", "name": "WebDriver::getCurrentURL", "doc": "&quot;Get a string representing the current URL that the browser is looking at.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_getPageSource", "name": "WebDriver::getPageSource", "doc": "&quot;Get the source of the last loaded page.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_getTitle", "name": "WebDriver::getTitle", "doc": "&quot;Get the title of the current page.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_getWindowHandle", "name": "WebDriver::getWindowHandle", "doc": "&quot;Return an opaque handle to this window that uniquely identifies it within\nthis driver instance.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_getWindowHandles", "name": "WebDriver::getWindowHandles", "doc": "&quot;Get all window handles available to the current session.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_quit", "name": "WebDriver::quit", "doc": "&quot;Quits this driver, closing every associated window.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_takeScreenshot", "name": "WebDriver::takeScreenshot", "doc": "&quot;Take a screenshot of the current page.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_wait", "name": "WebDriver::wait", "doc": "&quot;Construct a new WebDriverWait by the current WebDriver instance.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_manage", "name": "WebDriver::manage", "doc": "&quot;An abstraction for managing stuff you would do in a browser menu. For\nexample, adding and deleting cookies.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_navigate", "name": "WebDriver::navigate", "doc": "&quot;An abstraction allowing the driver to access the browser&#039;s history and to\nnavigate to a given URL.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_switchTo", "name": "WebDriver::switchTo", "doc": "&quot;Switch to a different window or frame.&quot;"},
                    {"type": "Method", "fromName": "WebDriver", "fromLink": "WebDriver.html", "link": "WebDriver.html#method_execute", "name": "WebDriver::execute", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverAction.html", "name": "WebDriverAction", "doc": "&quot;Interface representing a single user-interaction action.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverAction", "fromLink": "WebDriverAction.html", "link": "WebDriverAction.html#method_perform", "name": "WebDriverAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverActions.html", "name": "WebDriverActions", "doc": "&quot;WebDriver action builder. It implements the builder pattern.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverActions", "fromLink": "WebDriverActions.html", "link": "WebDriverActions.html#method___construct", "name": "WebDriverActions::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverActions", "fromLink": "WebDriverActions.html", "link": "WebDriverActions.html#method_perform", "name": "WebDriverActions::perform", "doc": "&quot;A convenience method for performing the actions without calling build().&quot;"},
                    {"type": "Method", "fromName": "WebDriverActions", "fromLink": "WebDriverActions.html", "link": "WebDriverActions.html#method_click", "name": "WebDriverActions::click", "doc": "&quot;Mouse click.&quot;"},
                    {"type": "Method", "fromName": "WebDriverActions", "fromLink": "WebDriverActions.html", "link": "WebDriverActions.html#method_clickAndHold", "name": "WebDriverActions::clickAndHold", "doc": "&quot;Mouse click and hold.&quot;"},
                    {"type": "Method", "fromName": "WebDriverActions", "fromLink": "WebDriverActions.html", "link": "WebDriverActions.html#method_contextClick", "name": "WebDriverActions::contextClick", "doc": "&quot;Context-click (right click).&quot;"},
                    {"type": "Method", "fromName": "WebDriverActions", "fromLink": "WebDriverActions.html", "link": "WebDriverActions.html#method_doubleClick", "name": "WebDriverActions::doubleClick", "doc": "&quot;Double click.&quot;"},
                    {"type": "Method", "fromName": "WebDriverActions", "fromLink": "WebDriverActions.html", "link": "WebDriverActions.html#method_dragAndDrop", "name": "WebDriverActions::dragAndDrop", "doc": "&quot;Drag and drop from $source to $target.&quot;"},
                    {"type": "Method", "fromName": "WebDriverActions", "fromLink": "WebDriverActions.html", "link": "WebDriverActions.html#method_dragAndDropBy", "name": "WebDriverActions::dragAndDropBy", "doc": "&quot;Drag $source and drop by offset ($x&lt;em&gt;offset, $y&lt;\/em&gt;offset).&quot;"},
                    {"type": "Method", "fromName": "WebDriverActions", "fromLink": "WebDriverActions.html", "link": "WebDriverActions.html#method_moveByOffset", "name": "WebDriverActions::moveByOffset", "doc": "&quot;Mouse move by offset.&quot;"},
                    {"type": "Method", "fromName": "WebDriverActions", "fromLink": "WebDriverActions.html", "link": "WebDriverActions.html#method_moveToElement", "name": "WebDriverActions::moveToElement", "doc": "&quot;Move to the middle of the given WebDriverElement. If offset are provided,\nmove the an offset from the top-left cornerof that element.&quot;"},
                    {"type": "Method", "fromName": "WebDriverActions", "fromLink": "WebDriverActions.html", "link": "WebDriverActions.html#method_release", "name": "WebDriverActions::release", "doc": "&quot;Release the mouse button.&quot;"},
                    {"type": "Method", "fromName": "WebDriverActions", "fromLink": "WebDriverActions.html", "link": "WebDriverActions.html#method_keyDown", "name": "WebDriverActions::keyDown", "doc": "&quot;Press a key on keyboard.&quot;"},
                    {"type": "Method", "fromName": "WebDriverActions", "fromLink": "WebDriverActions.html", "link": "WebDriverActions.html#method_keyUp", "name": "WebDriverActions::keyUp", "doc": "&quot;Release a key on keyboard.&quot;"},
                    {"type": "Method", "fromName": "WebDriverActions", "fromLink": "WebDriverActions.html", "link": "WebDriverActions.html#method_sendKeys", "name": "WebDriverActions::sendKeys", "doc": "&quot;Send keys by keyboard.&quot;"},
            
            {"type": "Class",  "link": "WebDriverAlert.html", "name": "WebDriverAlert", "doc": "&quot;An abstraction allowing the driver to manipulate the javascript alerts&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverAlert", "fromLink": "WebDriverAlert.html", "link": "WebDriverAlert.html#method___construct", "name": "WebDriverAlert::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverAlert", "fromLink": "WebDriverAlert.html", "link": "WebDriverAlert.html#method_accept", "name": "WebDriverAlert::accept", "doc": "&quot;Accept alert&quot;"},
                    {"type": "Method", "fromName": "WebDriverAlert", "fromLink": "WebDriverAlert.html", "link": "WebDriverAlert.html#method_dismiss", "name": "WebDriverAlert::dismiss", "doc": "&quot;Dismiss alert&quot;"},
                    {"type": "Method", "fromName": "WebDriverAlert", "fromLink": "WebDriverAlert.html", "link": "WebDriverAlert.html#method_getText", "name": "WebDriverAlert::getText", "doc": "&quot;Get alert text&quot;"},
                    {"type": "Method", "fromName": "WebDriverAlert", "fromLink": "WebDriverAlert.html", "link": "WebDriverAlert.html#method_sendKeys", "name": "WebDriverAlert::sendKeys", "doc": "&quot;Send keystrokes to javascript prompt() dialog&quot;"},
            
            {"type": "Class",  "link": "WebDriverBrowserType.html", "name": "WebDriverBrowserType", "doc": "&quot;All the browsers supported by selenium&quot;"},
                    
            {"type": "Class",  "link": "WebDriverButtonReleaseAction.html", "name": "WebDriverButtonReleaseAction", "doc": "&quot;Move to the location and then release the mouse key.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverButtonReleaseAction", "fromLink": "WebDriverButtonReleaseAction.html", "link": "WebDriverButtonReleaseAction.html#method_perform", "name": "WebDriverButtonReleaseAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverBy.html", "name": "WebDriverBy", "doc": "&quot;The basic 8 mechanisms supported by webdriver to locate a web element.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverBy", "fromLink": "WebDriverBy.html", "link": "WebDriverBy.html#method___construct", "name": "WebDriverBy::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverBy", "fromLink": "WebDriverBy.html", "link": "WebDriverBy.html#method_getMechanism", "name": "WebDriverBy::getMechanism", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverBy", "fromLink": "WebDriverBy.html", "link": "WebDriverBy.html#method_getValue", "name": "WebDriverBy::getValue", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverBy", "fromLink": "WebDriverBy.html", "link": "WebDriverBy.html#method_className", "name": "WebDriverBy::className", "doc": "&quot;Locates elements whose class name contains the search value; compound class\nnames are not permitted.&quot;"},
                    {"type": "Method", "fromName": "WebDriverBy", "fromLink": "WebDriverBy.html", "link": "WebDriverBy.html#method_cssSelector", "name": "WebDriverBy::cssSelector", "doc": "&quot;Locates elements matching a CSS selector.&quot;"},
                    {"type": "Method", "fromName": "WebDriverBy", "fromLink": "WebDriverBy.html", "link": "WebDriverBy.html#method_id", "name": "WebDriverBy::id", "doc": "&quot;Locates elements whose ID attribute matches the search value.&quot;"},
                    {"type": "Method", "fromName": "WebDriverBy", "fromLink": "WebDriverBy.html", "link": "WebDriverBy.html#method_name", "name": "WebDriverBy::name", "doc": "&quot;Locates elements whose NAME attribute matches the search value.&quot;"},
                    {"type": "Method", "fromName": "WebDriverBy", "fromLink": "WebDriverBy.html", "link": "WebDriverBy.html#method_linkText", "name": "WebDriverBy::linkText", "doc": "&quot;Locates anchor elements whose visible text matches the search value.&quot;"},
                    {"type": "Method", "fromName": "WebDriverBy", "fromLink": "WebDriverBy.html", "link": "WebDriverBy.html#method_partialLinkText", "name": "WebDriverBy::partialLinkText", "doc": "&quot;Locates anchor elements whose visible text partially matches the search\nvalue.&quot;"},
                    {"type": "Method", "fromName": "WebDriverBy", "fromLink": "WebDriverBy.html", "link": "WebDriverBy.html#method_tagName", "name": "WebDriverBy::tagName", "doc": "&quot;Locates elements whose tag name matches the search value.&quot;"},
                    {"type": "Method", "fromName": "WebDriverBy", "fromLink": "WebDriverBy.html", "link": "WebDriverBy.html#method_xpath", "name": "WebDriverBy::xpath", "doc": "&quot;Locates elements matching an XPath expression.&quot;"},
            
            {"type": "Class",  "link": "WebDriverCapabilities.html", "name": "WebDriverCapabilities", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverCapabilities", "fromLink": "WebDriverCapabilities.html", "link": "WebDriverCapabilities.html#method_getBrowserName", "name": "WebDriverCapabilities::getBrowserName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverCapabilities", "fromLink": "WebDriverCapabilities.html", "link": "WebDriverCapabilities.html#method_getCapability", "name": "WebDriverCapabilities::getCapability", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverCapabilities", "fromLink": "WebDriverCapabilities.html", "link": "WebDriverCapabilities.html#method_getPlatform", "name": "WebDriverCapabilities::getPlatform", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverCapabilities", "fromLink": "WebDriverCapabilities.html", "link": "WebDriverCapabilities.html#method_getVersion", "name": "WebDriverCapabilities::getVersion", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverCapabilities", "fromLink": "WebDriverCapabilities.html", "link": "WebDriverCapabilities.html#method_is", "name": "WebDriverCapabilities::is", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverCapabilities", "fromLink": "WebDriverCapabilities.html", "link": "WebDriverCapabilities.html#method_isJavascriptEnabled", "name": "WebDriverCapabilities::isJavascriptEnabled", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverCapabilityType.html", "name": "WebDriverCapabilityType", "doc": "&quot;WebDriverCapabilityType contains all constants defined in the WebDriver\nWire Protocol.&quot;"},
                    
            {"type": "Class",  "link": "WebDriverClickAction.html", "name": "WebDriverClickAction", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverClickAction", "fromLink": "WebDriverClickAction.html", "link": "WebDriverClickAction.html#method_perform", "name": "WebDriverClickAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverClickAndHoldAction.html", "name": "WebDriverClickAndHoldAction", "doc": "&quot;Move the the location, click and hold.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverClickAndHoldAction", "fromLink": "WebDriverClickAndHoldAction.html", "link": "WebDriverClickAndHoldAction.html#method_perform", "name": "WebDriverClickAndHoldAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverCommand.html", "name": "WebDriverCommand", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverCommand", "fromLink": "WebDriverCommand.html", "link": "WebDriverCommand.html#method___construct", "name": "WebDriverCommand::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverCommand", "fromLink": "WebDriverCommand.html", "link": "WebDriverCommand.html#method_getName", "name": "WebDriverCommand::getName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverCommand", "fromLink": "WebDriverCommand.html", "link": "WebDriverCommand.html#method_getSessionID", "name": "WebDriverCommand::getSessionID", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverCommand", "fromLink": "WebDriverCommand.html", "link": "WebDriverCommand.html#method_getParameters", "name": "WebDriverCommand::getParameters", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverCommandExecutor.html", "name": "WebDriverCommandExecutor", "doc": "&quot;Interface for all command executor.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverCommandExecutor", "fromLink": "WebDriverCommandExecutor.html", "link": "WebDriverCommandExecutor.html#method_execute", "name": "WebDriverCommandExecutor::execute", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverCompositeAction.html", "name": "WebDriverCompositeAction", "doc": "&quot;An action for aggregating actions and triggering all of them afterwards.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverCompositeAction", "fromLink": "WebDriverCompositeAction.html", "link": "WebDriverCompositeAction.html#method_addAction", "name": "WebDriverCompositeAction::addAction", "doc": "&quot;Add an WebDriverAction to the sequence.&quot;"},
                    {"type": "Method", "fromName": "WebDriverCompositeAction", "fromLink": "WebDriverCompositeAction.html", "link": "WebDriverCompositeAction.html#method_getNumberOfActions", "name": "WebDriverCompositeAction::getNumberOfActions", "doc": "&quot;Get the number of actions in the sequence.&quot;"},
                    {"type": "Method", "fromName": "WebDriverCompositeAction", "fromLink": "WebDriverCompositeAction.html", "link": "WebDriverCompositeAction.html#method_perform", "name": "WebDriverCompositeAction::perform", "doc": "&quot;Perform the seqeunce of actions.&quot;"},
            
            {"type": "Class",  "link": "WebDriverContextClickAction.html", "name": "WebDriverContextClickAction", "doc": "&quot;You can call it &#039;Right Click&#039; if you like.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverContextClickAction", "fromLink": "WebDriverContextClickAction.html", "link": "WebDriverContextClickAction.html#method_perform", "name": "WebDriverContextClickAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverCoordinates.html", "name": "WebDriverCoordinates", "doc": "&quot;Interface representing basic mouse operations.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverCoordinates", "fromLink": "WebDriverCoordinates.html", "link": "WebDriverCoordinates.html#method___construct", "name": "WebDriverCoordinates::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverCoordinates", "fromLink": "WebDriverCoordinates.html", "link": "WebDriverCoordinates.html#method_onScreen", "name": "WebDriverCoordinates::onScreen", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverCoordinates", "fromLink": "WebDriverCoordinates.html", "link": "WebDriverCoordinates.html#method_inViewPort", "name": "WebDriverCoordinates::inViewPort", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverCoordinates", "fromLink": "WebDriverCoordinates.html", "link": "WebDriverCoordinates.html#method_onPage", "name": "WebDriverCoordinates::onPage", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverCoordinates", "fromLink": "WebDriverCoordinates.html", "link": "WebDriverCoordinates.html#method_getAuxiliary", "name": "WebDriverCoordinates::getAuxiliary", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverCurlException.html", "name": "WebDriverCurlException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "WebDriverDimension.html", "name": "WebDriverDimension", "doc": "&quot;Represent a dimension.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverDimension", "fromLink": "WebDriverDimension.html", "link": "WebDriverDimension.html#method___construct", "name": "WebDriverDimension::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverDimension", "fromLink": "WebDriverDimension.html", "link": "WebDriverDimension.html#method_getHeight", "name": "WebDriverDimension::getHeight", "doc": "&quot;Get the height.&quot;"},
                    {"type": "Method", "fromName": "WebDriverDimension", "fromLink": "WebDriverDimension.html", "link": "WebDriverDimension.html#method_getWidth", "name": "WebDriverDimension::getWidth", "doc": "&quot;Get the width.&quot;"},
                    {"type": "Method", "fromName": "WebDriverDimension", "fromLink": "WebDriverDimension.html", "link": "WebDriverDimension.html#method_equals", "name": "WebDriverDimension::equals", "doc": "&quot;Check whether the given dimension is the same as the instance.&quot;"},
            
            {"type": "Class",  "link": "WebDriverDispatcher.html", "name": "WebDriverDispatcher", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverDispatcher", "fromLink": "WebDriverDispatcher.html", "link": "WebDriverDispatcher.html#method_setDefaultDriver", "name": "WebDriverDispatcher::setDefaultDriver", "doc": "&quot;this is needed so that EventFiringWebElement can pass the driver to the\nexception handling&quot;"},
                    {"type": "Method", "fromName": "WebDriverDispatcher", "fromLink": "WebDriverDispatcher.html", "link": "WebDriverDispatcher.html#method_getDefaultDriver", "name": "WebDriverDispatcher::getDefaultDriver", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverDispatcher", "fromLink": "WebDriverDispatcher.html", "link": "WebDriverDispatcher.html#method_register", "name": "WebDriverDispatcher::register", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverDispatcher", "fromLink": "WebDriverDispatcher.html", "link": "WebDriverDispatcher.html#method_unregister", "name": "WebDriverDispatcher::unregister", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverDispatcher", "fromLink": "WebDriverDispatcher.html", "link": "WebDriverDispatcher.html#method_dispatch", "name": "WebDriverDispatcher::dispatch", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverDoubleClickAction.html", "name": "WebDriverDoubleClickAction", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverDoubleClickAction", "fromLink": "WebDriverDoubleClickAction.html", "link": "WebDriverDoubleClickAction.html#method_perform", "name": "WebDriverDoubleClickAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverDoubleTapAction.html", "name": "WebDriverDoubleTapAction", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverDoubleTapAction", "fromLink": "WebDriverDoubleTapAction.html", "link": "WebDriverDoubleTapAction.html#method_perform", "name": "WebDriverDoubleTapAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverDownAction.html", "name": "WebDriverDownAction", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverDownAction", "fromLink": "WebDriverDownAction.html", "link": "WebDriverDownAction.html#method___construct", "name": "WebDriverDownAction::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverDownAction", "fromLink": "WebDriverDownAction.html", "link": "WebDriverDownAction.html#method_perform", "name": "WebDriverDownAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverElement.html", "name": "WebDriverElement", "doc": "&quot;Interface for an HTML element in the WebDriver framework.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_clear", "name": "WebDriverElement::clear", "doc": "&quot;If this element is a TEXTAREA or text INPUT element, this will clear the\nvalue.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_click", "name": "WebDriverElement::click", "doc": "&quot;Click this element.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_getAttribute", "name": "WebDriverElement::getAttribute", "doc": "&quot;Get the value of a the given attribute of the element.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_getCSSValue", "name": "WebDriverElement::getCSSValue", "doc": "&quot;Get the value of a given CSS property.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_getLocation", "name": "WebDriverElement::getLocation", "doc": "&quot;Get the location of element relative to the top-left corner of the page.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_getLocationOnScreenOnceScrolledIntoView", "name": "WebDriverElement::getLocationOnScreenOnceScrolledIntoView", "doc": "&quot;Try scrolling the element into the view port and return the location of\nelement relative to the top-left corner of the page afterwards.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_getSize", "name": "WebDriverElement::getSize", "doc": "&quot;Get the size of element.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_getTagName", "name": "WebDriverElement::getTagName", "doc": "&quot;Get the tag name of this element.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_getText", "name": "WebDriverElement::getText", "doc": "&quot;Get the visible (i.e. not hidden by CSS) innerText of this element,\nincluding sub-elements, without any leading or trailing whitespace.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_isDisplayed", "name": "WebDriverElement::isDisplayed", "doc": "&quot;Is this element displayed or not? This method avoids the problem of having\nto parse an element&#039;s \&quot;style\&quot; attribute.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_isEnabled", "name": "WebDriverElement::isEnabled", "doc": "&quot;Is the element currently enabled or not? This will generally return true\nfor everything but disabled input elements.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_isSelected", "name": "WebDriverElement::isSelected", "doc": "&quot;Determine whether or not this element is selected or not.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_sendKeys", "name": "WebDriverElement::sendKeys", "doc": "&quot;Simulate typing into an element, which may set its value.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_submit", "name": "WebDriverElement::submit", "doc": "&quot;If this current element is a form, or an element within a form, then this\nwill be submitted to the remote server.&quot;"},
                    {"type": "Method", "fromName": "WebDriverElement", "fromLink": "WebDriverElement.html", "link": "WebDriverElement.html#method_getID", "name": "WebDriverElement::getID", "doc": "&quot;Get the opaque ID of the element.&quot;"},
            
            {"type": "Class",  "link": "WebDriverEventListener.html", "name": "WebDriverEventListener", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_beforeNavigateTo", "name": "WebDriverEventListener::beforeNavigateTo", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_afterNavigateTo", "name": "WebDriverEventListener::afterNavigateTo", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_beforeNavigateBack", "name": "WebDriverEventListener::beforeNavigateBack", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_afterNavigateBack", "name": "WebDriverEventListener::afterNavigateBack", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_beforeNavigateForward", "name": "WebDriverEventListener::beforeNavigateForward", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_afterNavigateForward", "name": "WebDriverEventListener::afterNavigateForward", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_beforeFindBy", "name": "WebDriverEventListener::beforeFindBy", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_afterFindBy", "name": "WebDriverEventListener::afterFindBy", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_beforeScript", "name": "WebDriverEventListener::beforeScript", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_afterScript", "name": "WebDriverEventListener::afterScript", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_beforeClickOn", "name": "WebDriverEventListener::beforeClickOn", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_afterClickOn", "name": "WebDriverEventListener::afterClickOn", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_beforeChangeValueOf", "name": "WebDriverEventListener::beforeChangeValueOf", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_afterChangeValueOf", "name": "WebDriverEventListener::afterChangeValueOf", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverEventListener", "fromLink": "WebDriverEventListener.html", "link": "WebDriverEventListener.html#method_onException", "name": "WebDriverEventListener::onException", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverException.html", "name": "WebDriverException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverException", "fromLink": "WebDriverException.html", "link": "WebDriverException.html#method___construct", "name": "WebDriverException::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverException", "fromLink": "WebDriverException.html", "link": "WebDriverException.html#method_getResults", "name": "WebDriverException::getResults", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverException", "fromLink": "WebDriverException.html", "link": "WebDriverException.html#method_throwException", "name": "WebDriverException::throwException", "doc": "&quot;Throw WebDriverExceptions.&quot;"},
            
            {"type": "Class",  "link": "WebDriverExpectedCondition.html", "name": "WebDriverExpectedCondition", "doc": "&quot;Canned ExpectedConditions which are generally useful within webdriver tests.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method_getApply", "name": "WebDriverExpectedCondition::getApply", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method___construct", "name": "WebDriverExpectedCondition::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method_titleIs", "name": "WebDriverExpectedCondition::titleIs", "doc": "&quot;An expectation for checking the title of a page.&quot;"},
                    {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method_titleContains", "name": "WebDriverExpectedCondition::titleContains", "doc": "&quot;An expectation for checking substring of a page Title.&quot;"},
                    {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method_presenceOfElementLocated", "name": "WebDriverExpectedCondition::presenceOfElementLocated", "doc": "&quot;An expectation for checking that an element is present on the DOM of a\npage. This does not necessarily mean that the element is visible.&quot;"},
                    {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method_visibilityOfElementLocated", "name": "WebDriverExpectedCondition::visibilityOfElementLocated", "doc": "&quot;An expectation for checking that an element is present on the DOM of a page\nand visible. Visibility means that the element is not only displayed but\nalso has a height and width that is greater than 0.&quot;"},
                    {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method_visibilityOf", "name": "WebDriverExpectedCondition::visibilityOf", "doc": "&quot;An expectation for checking that an element, known to be present on the DOM\nof a page, is visible. Visibility means that the element is not only\ndisplayed but also has a height and width that is greater than 0.&quot;"},
                    {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method_presenceOfAllElementsLocatedBy", "name": "WebDriverExpectedCondition::presenceOfAllElementsLocatedBy", "doc": "&quot;An expectation for checking that there is at least one element present on a\nweb page.&quot;"},
                    {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method_textToBePresentInElement", "name": "WebDriverExpectedCondition::textToBePresentInElement", "doc": "&quot;An expectation for checking if the given text is present in the specified\nelement.&quot;"},
                    {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method_textToBePresentInElementValue", "name": "WebDriverExpectedCondition::textToBePresentInElementValue", "doc": "&quot;An expectation for checking if the given text is present in the specified\nelements value attribute.&quot;"},
                    {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method_frameToBeAvailableAndSwitchToIt", "name": "WebDriverExpectedCondition::frameToBeAvailableAndSwitchToIt", "doc": "&quot;Expectation for checking if iFrame exists.&quot;"},
                    {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method_invisibilityOfElementLocated", "name": "WebDriverExpectedCondition::invisibilityOfElementLocated", "doc": "&quot;An expectation for checking that an element is either invisible or not\npresent on the DOM.&quot;"},
                    {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method_invisibilityOfElementWithText", "name": "WebDriverExpectedCondition::invisibilityOfElementWithText", "doc": "&quot;An expectation for checking that an element with text is either invisible\nor not present on the DOM.&quot;"},
                    {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method_elementToBeClickable", "name": "WebDriverExpectedCondition::elementToBeClickable", "doc": "&quot;An expectation for checking an element is visible and enabled such that you\ncan click it.&quot;"},
                    {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method_stalenessOf", "name": "WebDriverExpectedCondition::stalenessOf", "doc": "&quot;Wait until an element is no longer attached to the DOM.&quot;"},
                    {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method_refreshed", "name": "WebDriverExpectedCondition::refreshed", "doc": "&quot;Wrapper for a condition, which allows for elements to update by redrawing.&quot;"},
                    {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method_elementToBeSelected", "name": "WebDriverExpectedCondition::elementToBeSelected", "doc": "&quot;An expectation for checking if the given element is selected.&quot;"},
                    {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method_elementSelectionStateToBe", "name": "WebDriverExpectedCondition::elementSelectionStateToBe", "doc": "&quot;An expectation for checking if the given element is selected.&quot;"},
                    {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method_alertIsPresent", "name": "WebDriverExpectedCondition::alertIsPresent", "doc": "&quot;An expectation for whether an alert() box is present.&quot;"},
                    {"type": "Method", "fromName": "WebDriverExpectedCondition", "fromLink": "WebDriverExpectedCondition.html", "link": "WebDriverExpectedCondition.html#method_not", "name": "WebDriverExpectedCondition::not", "doc": "&quot;An expectation with the logical opposite condition of the given condition.&quot;"},
            
            {"type": "Class",  "link": "WebDriverFlickAction.html", "name": "WebDriverFlickAction", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverFlickAction", "fromLink": "WebDriverFlickAction.html", "link": "WebDriverFlickAction.html#method___construct", "name": "WebDriverFlickAction::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverFlickAction", "fromLink": "WebDriverFlickAction.html", "link": "WebDriverFlickAction.html#method_perform", "name": "WebDriverFlickAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverFlickFromElementAction.html", "name": "WebDriverFlickFromElementAction", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverFlickFromElementAction", "fromLink": "WebDriverFlickFromElementAction.html", "link": "WebDriverFlickFromElementAction.html#method___construct", "name": "WebDriverFlickFromElementAction::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverFlickFromElementAction", "fromLink": "WebDriverFlickFromElementAction.html", "link": "WebDriverFlickFromElementAction.html#method_perform", "name": "WebDriverFlickFromElementAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverHasInputDevices.html", "name": "WebDriverHasInputDevices", "doc": "&quot;Interface implemented by each driver that allows access to the input devices.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverHasInputDevices", "fromLink": "WebDriverHasInputDevices.html", "link": "WebDriverHasInputDevices.html#method_getKeyboard", "name": "WebDriverHasInputDevices::getKeyboard", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverHasInputDevices", "fromLink": "WebDriverHasInputDevices.html", "link": "WebDriverHasInputDevices.html#method_getMouse", "name": "WebDriverHasInputDevices::getMouse", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverKeyDownAction.html", "name": "WebDriverKeyDownAction", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverKeyDownAction", "fromLink": "WebDriverKeyDownAction.html", "link": "WebDriverKeyDownAction.html#method_perform", "name": "WebDriverKeyDownAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverKeyUpAction.html", "name": "WebDriverKeyUpAction", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverKeyUpAction", "fromLink": "WebDriverKeyUpAction.html", "link": "WebDriverKeyUpAction.html#method_perform", "name": "WebDriverKeyUpAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverKeyboard.html", "name": "WebDriverKeyboard", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverKeyboard", "fromLink": "WebDriverKeyboard.html", "link": "WebDriverKeyboard.html#method_sendKeys", "name": "WebDriverKeyboard::sendKeys", "doc": "&quot;Send a sequence of keys.&quot;"},
                    {"type": "Method", "fromName": "WebDriverKeyboard", "fromLink": "WebDriverKeyboard.html", "link": "WebDriverKeyboard.html#method_pressKey", "name": "WebDriverKeyboard::pressKey", "doc": "&quot;Press a key&quot;"},
                    {"type": "Method", "fromName": "WebDriverKeyboard", "fromLink": "WebDriverKeyboard.html", "link": "WebDriverKeyboard.html#method_releaseKey", "name": "WebDriverKeyboard::releaseKey", "doc": "&quot;Release a key&quot;"},
            
            {"type": "Class",  "link": "WebDriverKeys.html", "name": "WebDriverKeys", "doc": "&quot;Representations of pressable keys that aren&#039;t text.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverKeys", "fromLink": "WebDriverKeys.html", "link": "WebDriverKeys.html#method_encode", "name": "WebDriverKeys::encode", "doc": "&quot;Encode input of &lt;code&gt;sendKeys()&lt;\/code&gt;.&quot;"},
            
            {"type": "Class",  "link": "WebDriverKeysRelatedAction.html", "name": "WebDriverKeysRelatedAction", "doc": "&quot;Base class for all keyboard-related actions.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverKeysRelatedAction", "fromLink": "WebDriverKeysRelatedAction.html", "link": "WebDriverKeysRelatedAction.html#method___construct", "name": "WebDriverKeysRelatedAction::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverKeysRelatedAction", "fromLink": "WebDriverKeysRelatedAction.html", "link": "WebDriverKeysRelatedAction.html#method_focusOnElement", "name": "WebDriverKeysRelatedAction::focusOnElement", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverLocatable.html", "name": "WebDriverLocatable", "doc": "&quot;Interface representing basic mouse operations.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverLocatable", "fromLink": "WebDriverLocatable.html", "link": "WebDriverLocatable.html#method_getCoordinates", "name": "WebDriverLocatable::getCoordinates", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverLongPressAction.html", "name": "WebDriverLongPressAction", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverLongPressAction", "fromLink": "WebDriverLongPressAction.html", "link": "WebDriverLongPressAction.html#method_perform", "name": "WebDriverLongPressAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverMouse.html", "name": "WebDriverMouse", "doc": "&quot;Interface representing basic mouse operations.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverMouse", "fromLink": "WebDriverMouse.html", "link": "WebDriverMouse.html#method_click", "name": "WebDriverMouse::click", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverMouse", "fromLink": "WebDriverMouse.html", "link": "WebDriverMouse.html#method_contextClick", "name": "WebDriverMouse::contextClick", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverMouse", "fromLink": "WebDriverMouse.html", "link": "WebDriverMouse.html#method_doubleClick", "name": "WebDriverMouse::doubleClick", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverMouse", "fromLink": "WebDriverMouse.html", "link": "WebDriverMouse.html#method_mouseDown", "name": "WebDriverMouse::mouseDown", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverMouse", "fromLink": "WebDriverMouse.html", "link": "WebDriverMouse.html#method_mouseMove", "name": "WebDriverMouse::mouseMove", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverMouse", "fromLink": "WebDriverMouse.html", "link": "WebDriverMouse.html#method_mouseUp", "name": "WebDriverMouse::mouseUp", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverMouseAction.html", "name": "WebDriverMouseAction", "doc": "&quot;Base class for all mouse-related actions.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverMouseAction", "fromLink": "WebDriverMouseAction.html", "link": "WebDriverMouseAction.html#method___construct", "name": "WebDriverMouseAction::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverMouseAction", "fromLink": "WebDriverMouseAction.html", "link": "WebDriverMouseAction.html#method_getActionLocation", "name": "WebDriverMouseAction::getActionLocation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverMouseAction", "fromLink": "WebDriverMouseAction.html", "link": "WebDriverMouseAction.html#method_moveToLocation", "name": "WebDriverMouseAction::moveToLocation", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverMouseMoveAction.html", "name": "WebDriverMouseMoveAction", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverMouseMoveAction", "fromLink": "WebDriverMouseMoveAction.html", "link": "WebDriverMouseMoveAction.html#method_perform", "name": "WebDriverMouseMoveAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverMoveAction.html", "name": "WebDriverMoveAction", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverMoveAction", "fromLink": "WebDriverMoveAction.html", "link": "WebDriverMoveAction.html#method___construct", "name": "WebDriverMoveAction::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverMoveAction", "fromLink": "WebDriverMoveAction.html", "link": "WebDriverMoveAction.html#method_perform", "name": "WebDriverMoveAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverMoveToOffsetAction.html", "name": "WebDriverMoveToOffsetAction", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverMoveToOffsetAction", "fromLink": "WebDriverMoveToOffsetAction.html", "link": "WebDriverMoveToOffsetAction.html#method___construct", "name": "WebDriverMoveToOffsetAction::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverMoveToOffsetAction", "fromLink": "WebDriverMoveToOffsetAction.html", "link": "WebDriverMoveToOffsetAction.html#method_perform", "name": "WebDriverMoveToOffsetAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverNavigation.html", "name": "WebDriverNavigation", "doc": "&quot;An abstraction allowing the driver to access the browser&#039;s history and to\nnavigate to a given URL.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverNavigation", "fromLink": "WebDriverNavigation.html", "link": "WebDriverNavigation.html#method___construct", "name": "WebDriverNavigation::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverNavigation", "fromLink": "WebDriverNavigation.html", "link": "WebDriverNavigation.html#method_back", "name": "WebDriverNavigation::back", "doc": "&quot;Move back a single entry in the browser&#039;s history, if possible.&quot;"},
                    {"type": "Method", "fromName": "WebDriverNavigation", "fromLink": "WebDriverNavigation.html", "link": "WebDriverNavigation.html#method_forward", "name": "WebDriverNavigation::forward", "doc": "&quot;Move forward a single entry in the browser&#039;s history, if possible.&quot;"},
                    {"type": "Method", "fromName": "WebDriverNavigation", "fromLink": "WebDriverNavigation.html", "link": "WebDriverNavigation.html#method_refresh", "name": "WebDriverNavigation::refresh", "doc": "&quot;Refresh the current page.&quot;"},
                    {"type": "Method", "fromName": "WebDriverNavigation", "fromLink": "WebDriverNavigation.html", "link": "WebDriverNavigation.html#method_to", "name": "WebDriverNavigation::to", "doc": "&quot;Navigate to the given URL.&quot;"},
            
            {"type": "Class",  "link": "WebDriverOptions.html", "name": "WebDriverOptions", "doc": "&quot;Managing stuff you would do in a browser.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverOptions", "fromLink": "WebDriverOptions.html", "link": "WebDriverOptions.html#method___construct", "name": "WebDriverOptions::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverOptions", "fromLink": "WebDriverOptions.html", "link": "WebDriverOptions.html#method_addCookie", "name": "WebDriverOptions::addCookie", "doc": "&quot;Add a specific cookie.&quot;"},
                    {"type": "Method", "fromName": "WebDriverOptions", "fromLink": "WebDriverOptions.html", "link": "WebDriverOptions.html#method_deleteAllCookies", "name": "WebDriverOptions::deleteAllCookies", "doc": "&quot;Delete all the cookies that are currently visible.&quot;"},
                    {"type": "Method", "fromName": "WebDriverOptions", "fromLink": "WebDriverOptions.html", "link": "WebDriverOptions.html#method_deleteCookieNamed", "name": "WebDriverOptions::deleteCookieNamed", "doc": "&quot;Delete the cookie with the give name.&quot;"},
                    {"type": "Method", "fromName": "WebDriverOptions", "fromLink": "WebDriverOptions.html", "link": "WebDriverOptions.html#method_getCookieNamed", "name": "WebDriverOptions::getCookieNamed", "doc": "&quot;Get the cookie with a given name.&quot;"},
                    {"type": "Method", "fromName": "WebDriverOptions", "fromLink": "WebDriverOptions.html", "link": "WebDriverOptions.html#method_getCookies", "name": "WebDriverOptions::getCookies", "doc": "&quot;Get all the cookies for the current domain.&quot;"},
                    {"type": "Method", "fromName": "WebDriverOptions", "fromLink": "WebDriverOptions.html", "link": "WebDriverOptions.html#method_timeouts", "name": "WebDriverOptions::timeouts", "doc": "&quot;Return the interface for managing driver timeouts.&quot;"},
                    {"type": "Method", "fromName": "WebDriverOptions", "fromLink": "WebDriverOptions.html", "link": "WebDriverOptions.html#method_window", "name": "WebDriverOptions::window", "doc": "&quot;An abstraction allowing the driver to manipulate the browser&#039;s window&quot;"},
                    {"type": "Method", "fromName": "WebDriverOptions", "fromLink": "WebDriverOptions.html", "link": "WebDriverOptions.html#method_getLog", "name": "WebDriverOptions::getLog", "doc": "&quot;Get the log for a given log type. Log buffer is reset after each request.&quot;"},
                    {"type": "Method", "fromName": "WebDriverOptions", "fromLink": "WebDriverOptions.html", "link": "WebDriverOptions.html#method_getAvailableLogTypes", "name": "WebDriverOptions::getAvailableLogTypes", "doc": "&quot;Get available log types.&quot;"},
            
            {"type": "Class",  "link": "WebDriverPlatform.html", "name": "WebDriverPlatform", "doc": "&quot;The platforms supported by WebDriver.&quot;"},
                    
            {"type": "Class",  "link": "WebDriverPoint.html", "name": "WebDriverPoint", "doc": "&quot;Represent a point.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverPoint", "fromLink": "WebDriverPoint.html", "link": "WebDriverPoint.html#method___construct", "name": "WebDriverPoint::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverPoint", "fromLink": "WebDriverPoint.html", "link": "WebDriverPoint.html#method_getX", "name": "WebDriverPoint::getX", "doc": "&quot;Get the x-coordinate.&quot;"},
                    {"type": "Method", "fromName": "WebDriverPoint", "fromLink": "WebDriverPoint.html", "link": "WebDriverPoint.html#method_getY", "name": "WebDriverPoint::getY", "doc": "&quot;Get the y-coordinate.&quot;"},
                    {"type": "Method", "fromName": "WebDriverPoint", "fromLink": "WebDriverPoint.html", "link": "WebDriverPoint.html#method_move", "name": "WebDriverPoint::move", "doc": "&quot;Set the point to a new position.&quot;"},
                    {"type": "Method", "fromName": "WebDriverPoint", "fromLink": "WebDriverPoint.html", "link": "WebDriverPoint.html#method_moveBy", "name": "WebDriverPoint::moveBy", "doc": "&quot;Move the current by offsets.&quot;"},
                    {"type": "Method", "fromName": "WebDriverPoint", "fromLink": "WebDriverPoint.html", "link": "WebDriverPoint.html#method_equals", "name": "WebDriverPoint::equals", "doc": "&quot;Check whether the given point is the same as the instance.&quot;"},
            
            {"type": "Class",  "link": "WebDriverResponse.html", "name": "WebDriverResponse", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverResponse", "fromLink": "WebDriverResponse.html", "link": "WebDriverResponse.html#method___construct", "name": "WebDriverResponse::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverResponse", "fromLink": "WebDriverResponse.html", "link": "WebDriverResponse.html#method_getStatus", "name": "WebDriverResponse::getStatus", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverResponse", "fromLink": "WebDriverResponse.html", "link": "WebDriverResponse.html#method_setStatus", "name": "WebDriverResponse::setStatus", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverResponse", "fromLink": "WebDriverResponse.html", "link": "WebDriverResponse.html#method_getValue", "name": "WebDriverResponse::getValue", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverResponse", "fromLink": "WebDriverResponse.html", "link": "WebDriverResponse.html#method_setValue", "name": "WebDriverResponse::setValue", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverResponse", "fromLink": "WebDriverResponse.html", "link": "WebDriverResponse.html#method_getSessionID", "name": "WebDriverResponse::getSessionID", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverResponse", "fromLink": "WebDriverResponse.html", "link": "WebDriverResponse.html#method_setSessionID", "name": "WebDriverResponse::setSessionID", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverScrollAction.html", "name": "WebDriverScrollAction", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverScrollAction", "fromLink": "WebDriverScrollAction.html", "link": "WebDriverScrollAction.html#method___construct", "name": "WebDriverScrollAction::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverScrollAction", "fromLink": "WebDriverScrollAction.html", "link": "WebDriverScrollAction.html#method_perform", "name": "WebDriverScrollAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverScrollFromElementAction.html", "name": "WebDriverScrollFromElementAction", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverScrollFromElementAction", "fromLink": "WebDriverScrollFromElementAction.html", "link": "WebDriverScrollFromElementAction.html#method___construct", "name": "WebDriverScrollFromElementAction::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverScrollFromElementAction", "fromLink": "WebDriverScrollFromElementAction.html", "link": "WebDriverScrollFromElementAction.html#method_perform", "name": "WebDriverScrollFromElementAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverSearchContext.html", "name": "WebDriverSearchContext", "doc": "&quot;The interface for WebDriver and WebDriverElement which is able to search for\nWebDriverElement inside.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverSearchContext", "fromLink": "WebDriverSearchContext.html", "link": "WebDriverSearchContext.html#method_findElement", "name": "WebDriverSearchContext::findElement", "doc": "&quot;Find the first WebDriverElement within this element using the given\nmechanism.&quot;"},
                    {"type": "Method", "fromName": "WebDriverSearchContext", "fromLink": "WebDriverSearchContext.html", "link": "WebDriverSearchContext.html#method_findElements", "name": "WebDriverSearchContext::findElements", "doc": "&quot;Find all WebDriverElements within this element using the given mechanism.&quot;"},
            
            {"type": "Class",  "link": "WebDriverSelect.html", "name": "WebDriverSelect", "doc": "&quot;Models a SELECT tag, providing helper methods to select and deselect options.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverSelect", "fromLink": "WebDriverSelect.html", "link": "WebDriverSelect.html#method___construct", "name": "WebDriverSelect::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverSelect", "fromLink": "WebDriverSelect.html", "link": "WebDriverSelect.html#method_isMultiple", "name": "WebDriverSelect::isMultiple", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverSelect", "fromLink": "WebDriverSelect.html", "link": "WebDriverSelect.html#method_getOptions", "name": "WebDriverSelect::getOptions", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverSelect", "fromLink": "WebDriverSelect.html", "link": "WebDriverSelect.html#method_getAllSelectedOptions", "name": "WebDriverSelect::getAllSelectedOptions", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverSelect", "fromLink": "WebDriverSelect.html", "link": "WebDriverSelect.html#method_getFirstSelectedOption", "name": "WebDriverSelect::getFirstSelectedOption", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverSelect", "fromLink": "WebDriverSelect.html", "link": "WebDriverSelect.html#method_deselectAll", "name": "WebDriverSelect::deselectAll", "doc": "&quot;Deselect all options in multiple select tag.&quot;"},
                    {"type": "Method", "fromName": "WebDriverSelect", "fromLink": "WebDriverSelect.html", "link": "WebDriverSelect.html#method_selectByIndex", "name": "WebDriverSelect::selectByIndex", "doc": "&quot;Select the option at the given index.&quot;"},
                    {"type": "Method", "fromName": "WebDriverSelect", "fromLink": "WebDriverSelect.html", "link": "WebDriverSelect.html#method_selectByValue", "name": "WebDriverSelect::selectByValue", "doc": "&quot;Select all options that have value attribute matching the argument. That\nis, when given \&quot;foo\&quot; this would select an option like:&quot;"},
                    {"type": "Method", "fromName": "WebDriverSelect", "fromLink": "WebDriverSelect.html", "link": "WebDriverSelect.html#method_selectByVisibleText", "name": "WebDriverSelect::selectByVisibleText", "doc": "&quot;Select all options that display text matching the argument. That is, when\ngiven \&quot;Bar\&quot; this would select an option like:&quot;"},
                    {"type": "Method", "fromName": "WebDriverSelect", "fromLink": "WebDriverSelect.html", "link": "WebDriverSelect.html#method_deselectByIndex", "name": "WebDriverSelect::deselectByIndex", "doc": "&quot;Deselect the option at the given index.&quot;"},
                    {"type": "Method", "fromName": "WebDriverSelect", "fromLink": "WebDriverSelect.html", "link": "WebDriverSelect.html#method_deselectByValue", "name": "WebDriverSelect::deselectByValue", "doc": "&quot;Deselect all options that have value attribute matching the argument. That\nis, when given \&quot;foo\&quot; this would select an option like:&quot;"},
                    {"type": "Method", "fromName": "WebDriverSelect", "fromLink": "WebDriverSelect.html", "link": "WebDriverSelect.html#method_deselectByVisibleText", "name": "WebDriverSelect::deselectByVisibleText", "doc": "&quot;Deselect all options that display text matching the argument. That is, when\ngiven \&quot;Bar\&quot; this would select an option like:&quot;"},
                    {"type": "Method", "fromName": "WebDriverSelect", "fromLink": "WebDriverSelect.html", "link": "WebDriverSelect.html#method_escapeQuotes", "name": "WebDriverSelect::escapeQuotes", "doc": "&quot;Convert strings with both quotes and ticks into:\n  foo&#039;\&quot;bar -&gt; concat(\&quot;foo&#039;\&quot;, &#039;\&quot;&#039;, \&quot;bar\&quot;)&quot;"},
            
            {"type": "Class",  "link": "WebDriverSendKeysAction.html", "name": "WebDriverSendKeysAction", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverSendKeysAction", "fromLink": "WebDriverSendKeysAction.html", "link": "WebDriverSendKeysAction.html#method___construct", "name": "WebDriverSendKeysAction::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverSendKeysAction", "fromLink": "WebDriverSendKeysAction.html", "link": "WebDriverSendKeysAction.html#method_perform", "name": "WebDriverSendKeysAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverSingleKeyAction.html", "name": "WebDriverSingleKeyAction", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverSingleKeyAction", "fromLink": "WebDriverSingleKeyAction.html", "link": "WebDriverSingleKeyAction.html#method___construct", "name": "WebDriverSingleKeyAction::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverTapAction.html", "name": "WebDriverTapAction", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverTapAction", "fromLink": "WebDriverTapAction.html", "link": "WebDriverTapAction.html#method_perform", "name": "WebDriverTapAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverTargetLocator.html", "name": "WebDriverTargetLocator", "doc": "&quot;Used to locate a given frame or window.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverTargetLocator", "fromLink": "WebDriverTargetLocator.html", "link": "WebDriverTargetLocator.html#method_defaultContent", "name": "WebDriverTargetLocator::defaultContent", "doc": "&quot;Switch to the main document if the page contains iframes. Otherwise, switch\nto the first frame on the page.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTargetLocator", "fromLink": "WebDriverTargetLocator.html", "link": "WebDriverTargetLocator.html#method_frame", "name": "WebDriverTargetLocator::frame", "doc": "&quot;Switch to the iframe by its id or name.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTargetLocator", "fromLink": "WebDriverTargetLocator.html", "link": "WebDriverTargetLocator.html#method_window", "name": "WebDriverTargetLocator::window", "doc": "&quot;Switch the focus to another window by its handle.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTargetLocator", "fromLink": "WebDriverTargetLocator.html", "link": "WebDriverTargetLocator.html#method_alert", "name": "WebDriverTargetLocator::alert", "doc": "&quot;Switch to the currently active modal dialog for this particular driver\ninstance.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTargetLocator", "fromLink": "WebDriverTargetLocator.html", "link": "WebDriverTargetLocator.html#method_activeElement", "name": "WebDriverTargetLocator::activeElement", "doc": "&quot;Switches to the element that currently has focus within the document\ncurrently \&quot;switched to\&quot;, or the body element if this cannot be detected.&quot;"},
            
            {"type": "Class",  "link": "WebDriverTimeouts.html", "name": "WebDriverTimeouts", "doc": "&quot;Managing timeout behavior for WebDriver instances.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverTimeouts", "fromLink": "WebDriverTimeouts.html", "link": "WebDriverTimeouts.html#method___construct", "name": "WebDriverTimeouts::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverTimeouts", "fromLink": "WebDriverTimeouts.html", "link": "WebDriverTimeouts.html#method_implicitlyWait", "name": "WebDriverTimeouts::implicitlyWait", "doc": "&quot;Specify the amount of time the driver should wait when searching for an\nelement if it is not immediately present.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTimeouts", "fromLink": "WebDriverTimeouts.html", "link": "WebDriverTimeouts.html#method_setScriptTimeout", "name": "WebDriverTimeouts::setScriptTimeout", "doc": "&quot;Set the amount of time to wait for an asynchronous script to finish\nexecution before throwing an error.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTimeouts", "fromLink": "WebDriverTimeouts.html", "link": "WebDriverTimeouts.html#method_pageLoadTimeout", "name": "WebDriverTimeouts::pageLoadTimeout", "doc": "&quot;Set the amount of time to wait for a page load to complete before throwing\nan error.&quot;"},
            
            {"type": "Class",  "link": "WebDriverTouchAction.html", "name": "WebDriverTouchAction", "doc": "&quot;Base class for all touch-related actions.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverTouchAction", "fromLink": "WebDriverTouchAction.html", "link": "WebDriverTouchAction.html#method___construct", "name": "WebDriverTouchAction::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchAction", "fromLink": "WebDriverTouchAction.html", "link": "WebDriverTouchAction.html#method_getActionLocation", "name": "WebDriverTouchAction::getActionLocation", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverTouchActions.html", "name": "WebDriverTouchActions", "doc": "&quot;WebDriver action builder for touch events&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverTouchActions", "fromLink": "WebDriverTouchActions.html", "link": "WebDriverTouchActions.html#method___construct", "name": "WebDriverTouchActions::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchActions", "fromLink": "WebDriverTouchActions.html", "link": "WebDriverTouchActions.html#method_tap", "name": "WebDriverTouchActions::tap", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchActions", "fromLink": "WebDriverTouchActions.html", "link": "WebDriverTouchActions.html#method_down", "name": "WebDriverTouchActions::down", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchActions", "fromLink": "WebDriverTouchActions.html", "link": "WebDriverTouchActions.html#method_up", "name": "WebDriverTouchActions::up", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchActions", "fromLink": "WebDriverTouchActions.html", "link": "WebDriverTouchActions.html#method_move", "name": "WebDriverTouchActions::move", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchActions", "fromLink": "WebDriverTouchActions.html", "link": "WebDriverTouchActions.html#method_scroll", "name": "WebDriverTouchActions::scroll", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchActions", "fromLink": "WebDriverTouchActions.html", "link": "WebDriverTouchActions.html#method_scrollFromElement", "name": "WebDriverTouchActions::scrollFromElement", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchActions", "fromLink": "WebDriverTouchActions.html", "link": "WebDriverTouchActions.html#method_doubleTap", "name": "WebDriverTouchActions::doubleTap", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchActions", "fromLink": "WebDriverTouchActions.html", "link": "WebDriverTouchActions.html#method_longPress", "name": "WebDriverTouchActions::longPress", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchActions", "fromLink": "WebDriverTouchActions.html", "link": "WebDriverTouchActions.html#method_flick", "name": "WebDriverTouchActions::flick", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchActions", "fromLink": "WebDriverTouchActions.html", "link": "WebDriverTouchActions.html#method_flickFromElement", "name": "WebDriverTouchActions::flickFromElement", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverTouchScreen.html", "name": "WebDriverTouchScreen", "doc": "&quot;Interface representing touch screen operations.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_tap", "name": "WebDriverTouchScreen::tap", "doc": "&quot;Single tap on the touch enabled device.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_doubleTap", "name": "WebDriverTouchScreen::doubleTap", "doc": "&quot;Double tap on the touch screen using finger motion events.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_down", "name": "WebDriverTouchScreen::down", "doc": "&quot;Finger down on the screen.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_flick", "name": "WebDriverTouchScreen::flick", "doc": "&quot;Flick on the touch screen using finger motion events. Use this flick\ncommand if you don&#039;t care where the flick starts on the screen.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_flickFromElement", "name": "WebDriverTouchScreen::flickFromElement", "doc": "&quot;Flick on the touch screen using finger motion events.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_longPress", "name": "WebDriverTouchScreen::longPress", "doc": "&quot;Long press on the touch screen using finger motion events.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_move", "name": "WebDriverTouchScreen::move", "doc": "&quot;Finger move on the screen.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_scroll", "name": "WebDriverTouchScreen::scroll", "doc": "&quot;Scroll on the touch screen using finger based motion events. Use this\ncommand if you don&#039;t care where the scroll starts on the screen.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_scrollFromElement", "name": "WebDriverTouchScreen::scrollFromElement", "doc": "&quot;Scroll on the touch screen using finger based motion events. Use this\ncommand to start scrolling at a particular screen location.&quot;"},
                    {"type": "Method", "fromName": "WebDriverTouchScreen", "fromLink": "WebDriverTouchScreen.html", "link": "WebDriverTouchScreen.html#method_up", "name": "WebDriverTouchScreen::up", "doc": "&quot;Finger up on the screen.&quot;"},
            
            {"type": "Class",  "link": "WebDriverUpAction.html", "name": "WebDriverUpAction", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverUpAction", "fromLink": "WebDriverUpAction.html", "link": "WebDriverUpAction.html#method___construct", "name": "WebDriverUpAction::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverUpAction", "fromLink": "WebDriverUpAction.html", "link": "WebDriverUpAction.html#method_perform", "name": "WebDriverUpAction::perform", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "WebDriverWait.html", "name": "WebDriverWait", "doc": "&quot;A utility class, designed to help the user to wait until a condition turns\ntrue.&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverWait", "fromLink": "WebDriverWait.html", "link": "WebDriverWait.html#method___construct", "name": "WebDriverWait::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverWait", "fromLink": "WebDriverWait.html", "link": "WebDriverWait.html#method_until", "name": "WebDriverWait::until", "doc": "&quot;Calls the function provided with the driver as an argument until the return\nvalue is not falsey.&quot;"},
            
            {"type": "Class",  "link": "WebDriverWindow.html", "name": "WebDriverWindow", "doc": "&quot;An abstraction allowing the driver to manipulate the browser&#039;s window&quot;"},
                                                        {"type": "Method", "fromName": "WebDriverWindow", "fromLink": "WebDriverWindow.html", "link": "WebDriverWindow.html#method___construct", "name": "WebDriverWindow::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "WebDriverWindow", "fromLink": "WebDriverWindow.html", "link": "WebDriverWindow.html#method_getPosition", "name": "WebDriverWindow::getPosition", "doc": "&quot;Get the position of the current window, relative to the upper left corner\nof the screen.&quot;"},
                    {"type": "Method", "fromName": "WebDriverWindow", "fromLink": "WebDriverWindow.html", "link": "WebDriverWindow.html#method_getSize", "name": "WebDriverWindow::getSize", "doc": "&quot;Get the size of the current window. This will return the outer window\ndimension, not just the view port.&quot;"},
                    {"type": "Method", "fromName": "WebDriverWindow", "fromLink": "WebDriverWindow.html", "link": "WebDriverWindow.html#method_maximize", "name": "WebDriverWindow::maximize", "doc": "&quot;Maximizes the current window if it is not already maximized&quot;"},
                    {"type": "Method", "fromName": "WebDriverWindow", "fromLink": "WebDriverWindow.html", "link": "WebDriverWindow.html#method_setSize", "name": "WebDriverWindow::setSize", "doc": "&quot;Set the size of the current window. This will change the outer window\ndimension, not just the view port.&quot;"},
                    {"type": "Method", "fromName": "WebDriverWindow", "fromLink": "WebDriverWindow.html", "link": "WebDriverWindow.html#method_setPosition", "name": "WebDriverWindow::setPosition", "doc": "&quot;Set the position of the current window. This is relative to the upper left\ncorner of the screen.&quot;"},
                    {"type": "Method", "fromName": "WebDriverWindow", "fromLink": "WebDriverWindow.html", "link": "WebDriverWindow.html#method_getScreenOrientation", "name": "WebDriverWindow::getScreenOrientation", "doc": "&quot;Get the current browser orientation.&quot;"},
                    {"type": "Method", "fromName": "WebDriverWindow", "fromLink": "WebDriverWindow.html", "link": "WebDriverWindow.html#method_setScreenOrientation", "name": "WebDriverWindow::setScreenOrientation", "doc": "&quot;Set the browser orientation. The orientation should either\nLANDSCAPE|PORTRAIT&quot;"},
            
            {"type": "Class",  "link": "XPathLookupException.html", "name": "XPathLookupException", "doc": "&quot;&quot;"},
                    
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


